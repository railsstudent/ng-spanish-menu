{
  "pipes": [],
  "interfaces": [
    {
      "name": "Choice",
      "id": "interface-Choice-ffd4fce5b56ef14648a20114f98cb5c8",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n\nexport interface Quantity {\n  qty: number\n}\n",
      "properties": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 163,
      "methods": []
    },
    {
      "name": "Menu",
      "id": "interface-Menu-ffd4fce5b56ef14648a20114f98cb5c8",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n\nexport interface Quantity {\n  qty: number\n}\n",
      "properties": [
        {
          "name": "menu",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 163,
      "methods": []
    },
    {
      "name": "MenuItem",
      "id": "interface-MenuItem-ffd4fce5b56ef14648a20114f98cb5c8",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n\nexport interface Quantity {\n  qty: number\n}\n",
      "properties": [
        {
          "name": "choices",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Choice[]",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "question",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "indexSignatures": [],
      "kind": 163,
      "methods": []
    },
    {
      "name": "OrderedFoodChoice",
      "id": "interface-OrderedFoodChoice-3952981fd4d16ee1c43868baaa7e0a96",
      "file": "src/app/food/interfaces/ordered-choice.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface OrderedFoodChoice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n",
      "properties": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 163,
      "methods": []
    },
    {
      "name": "Quantity",
      "id": "interface-Quantity-ffd4fce5b56ef14648a20114f98cb5c8",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n\nexport interface Quantity {\n  qty: number\n}\n",
      "properties": [
        {
          "name": "qty",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "indexSignatures": [],
      "kind": 163,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "FoodService",
      "id": "injectable-FoodService-b991ec655fde85034ba1d319953817f5",
      "file": "src/app/food/services/food.service.ts",
      "properties": [
        {
          "name": "quantityAvailableMap$",
          "defaultValue": "this.quantityAvailableSub$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "quantityAvailableSub$",
          "defaultValue": "new BehaviorSubject<Record<string, number> | undefined>(undefined)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [120]
        }
      ],
      "methods": [
        {
          "name": "calculateTotal",
          "args": [
            {
              "name": "food",
              "type": "literal type[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 37,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "food",
              "type": "literal type[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFood",
          "args": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<[] | undefined>",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject, Observable, of } from 'rxjs'\nimport { catchError, pluck, share, tap } from 'rxjs/operators'\n\nimport { Menu, MenuItem } from '../interfaces'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FoodService {\n  private quantityAvailableSub$ = new BehaviorSubject<Record<string, number> | undefined>(undefined)\n  quantityAvailableMap$ = this.quantityAvailableSub$.asObservable()\n\n  constructor(private http: HttpClient) {}\n\n  getFood(url: string): Observable<MenuItem[] | undefined> {\n    return this.http.get<Menu>(url).pipe(\n      pluck('menu'),\n      tap((menu) => {\n        const qtyMap = menu.reduce((acc, mi) => {\n          mi.choices.forEach(({ id, quantity }) => {\n            acc[id] = quantity\n          })\n          return acc\n        }, {} as Record<string, number>)\n        this.quantityAvailableSub$.next(qtyMap)\n      }),\n      catchError((err: Error) => {\n        console.error(err)\n        return of(undefined)\n      }),\n      share(),\n    )\n  }\n\n  calculateTotal(food: { price: number; quantity: number }[]): number {\n    const cents = 100\n    const unroundedTotal = food.reduce((acc, choice) => {\n      const { price, quantity } = choice\n      return acc + price * quantity\n    }, 0)\n\n    return Math.round(unroundedTotal * cents) / cents\n  }\n\n  updateQuantity(id: string, quantity: number): void {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      const oldQty = qtyAvailableMap[id]\n      const nextQty = oldQty - quantity\n      if (nextQty >= 0) {\n        this.quantityAvailableSub$.next({\n          ...qtyAvailableMap,\n          [id]: nextQty,\n        })\n      }\n    }\n  }\n\n  getQuantity(id: string): number {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      return qtyAvailableMap[id] || 0\n    }\n    return 0\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [
    {
      "name": "MockFoodService",
      "id": "class-MockFoodService-be4cfd5d05ca7fbaebad1edb967d8b83",
      "file": "src/app/food/storybook-mock/mock.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { BehaviorSubject, Observable, of } from 'rxjs'\n\nimport { MenuItem } from '../interfaces'\n\nexport class MockFoodService {\n  private quantityAvailableSub$ = new BehaviorSubject<Record<string, number> | undefined>(undefined)\n  quantityAvailableMap$ = this.quantityAvailableSub$.asObservable()\n\n  constructor(private menuItems?: MenuItem[]) {}\n\n  private buildQtyMap(): Record<string, number> | undefined {\n    if (!this.menuItems) {\n      return undefined\n    }\n    return this.menuItems.reduce((acc, mi) => {\n      mi.choices.forEach(({ id, quantity }) => {\n        acc[id] = quantity\n      })\n      return acc\n    }, {} as Record<string, number>)\n  }\n\n  getFood(): Observable<MenuItem[] | undefined> {\n    const qtyMap = this.buildQtyMap()\n    this.quantityAvailableSub$.next(qtyMap)\n    return of(this.menuItems)\n  }\n\n  calculateTotal(food: { price: number; quantity: number }[]): number {\n    const cents = 100\n    const unroundedTotal = food.reduce((acc, choice) => {\n      const { price, quantity } = choice\n      return acc + price * quantity\n    }, 0)\n\n    return Math.round(unroundedTotal * cents) / cents\n  }\n\n  updateQuantity(id: string, quantity: number): void {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      const oldQty = qtyAvailableMap[id]\n      const nextQty = oldQty - quantity\n      if (nextQty >= 0) {\n        this.quantityAvailableSub$.next({\n          ...qtyAvailableMap,\n          [id]: nextQty,\n        })\n      }\n    }\n  }\n\n  private getLatestQtyMap() {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (!qtyAvailableMap) {\n      const qtyMap = this.buildQtyMap()\n      this.quantityAvailableSub$.next(qtyMap)\n    }\n    return this.quantityAvailableSub$.getValue()\n  }\n\n  getQuantity(id: string): number {\n    const qtyAvailableMap = this.getLatestQtyMap()\n    if (qtyAvailableMap) {\n      return qtyAvailableMap[id] || 0\n    }\n    return 0\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "menuItems",
            "type": "MenuItem[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "menuItems",
            "type": "MenuItem[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "quantityAvailableMap$",
          "defaultValue": "this.quantityAvailableSub$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "quantityAvailableSub$",
          "defaultValue": "new BehaviorSubject<Record<string, number> | undefined>(undefined)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [120]
        }
      ],
      "methods": [
        {
          "name": "buildQtyMap",
          "args": [],
          "optional": false,
          "returnType": "Record | undefined",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [120]
        },
        {
          "name": "calculateTotal",
          "args": [
            {
              "name": "food",
              "type": "literal type[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "food",
              "type": "literal type[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFood",
          "args": [],
          "optional": false,
          "returnType": "Observable<[] | undefined>",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getLatestQtyMap",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [120]
        },
        {
          "name": "getQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 62,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-e10e50136a9eb3f6a469fb6f9ece678d",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "template": "<router-outlet></router-outlet>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n  styles: [],\n})\nexport class AppComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "FoodCardComponent",
      "id": "component-FoodCardComponent-06bf2c5004bc3d7943f1cf3e8ac4754b",
      "file": "src/app/food/food-card/food-card.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-card",
      "styleUrls": ["./food-card.component.scss"],
      "styles": [],
      "templateUrl": ["./food-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ordered",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "OrderedFoodChoice"
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\nimport { OrderedFoodChoice } from '../interfaces'\n\n@Component({\n  selector: 'app-food-card',\n  templateUrl: './food-card.component.html',\n  styleUrls: ['./food-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodCardComponent {\n  @Input()\n  ordered: OrderedFoodChoice\n\n  @Input()\n  total: number\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\n  display: block;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  border: 1px solid black;\n\n  .item {\n    padding: 0.5rem 0.75rem;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n  }\n}\n",
          "styleUrl": "./food-card.component.scss"
        }
      ],
      "stylesData": "",
      "templateData": "<div class=\"container\">\n  <label name=\"name\" class=\"item\">\n    <span class=\"field\">Name:</span>\n    <span>{{ ordered.name }}</span>\n  </label>\n  <label class=\"item\" name=\"description\">\n    <span class=\"field\">Description:</span>\n    <span>{{ ordered.description }}</span>\n  </label>\n  <label class=\"item\" name=\"price\">\n    <span class=\"field\">Price:</span>\n    <span>{{ ordered.price }}</span>\n  </label>\n  <label class=\"item\" name=\"quantity\">\n    <span class=\"field\">Quantity:</span>\n    <span>{{ ordered.quantity }}</span>\n  </label>\n  <label class=\"item\" name=\"total\">\n    <span class=\"field\">Total:</span>\n    <span>{{ ordered.currency }} {{ total }}</span>\n  </label>\n</div>\n"
    },
    {
      "name": "FoodChoiceComponent",
      "id": "component-FoodChoiceComponent-7001f096c35813ca413b14f8541b31c2",
      "file": "src/app/food/food-choice/food-choice.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-choice",
      "styleUrls": ["./food-choice.component.scss"],
      "styles": [],
      "templateUrl": ["./food-choice.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "choice",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "Choice"
        },
        {
          "name": "qtyMap",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "Record<string | number> | undefined | null"
        }
      ],
      "outputsClass": [
        {
          "name": "foodChoiceAdded",
          "defaultValue": "new EventEmitter<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "remained",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 30
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "submitFoodChoice",
          "args": [
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core'\n\nimport { Choice, OrderedFoodChoice } from '../interfaces'\n\n@Component({\n  selector: 'app-food-choice',\n  templateUrl: './food-choice.component.html',\n  styleUrls: ['./food-choice.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodChoiceComponent implements OnInit, OnChanges {\n  @Input()\n  choice: Choice\n\n  @Input()\n  qtyMap: Record<string, number> | undefined | null\n\n  @Output()\n  foodChoiceAdded = new EventEmitter<OrderedFoodChoice>()\n\n  remained: number\n\n  ngOnInit(): void {\n    this.remained = this.qtyMap ? this.qtyMap[this.choice.id] || 0 : 0\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { qtyMap = null } = changes\n    const { currentValue = null } = qtyMap || {}\n    if (currentValue) {\n      this.remained = currentValue[this.choice.id]\n    }\n  }\n\n  submitFoodChoice(quantity: number) {\n    const { id, name, description, price, currency } = this.choice\n    if (this.remained - quantity >= 0) {\n      this.foodChoiceAdded.emit({\n        id,\n        name,\n        description,\n        price,\n        currency,\n        quantity,\n      })\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "$danger-color: #a94442;\n\n:host {\n  display: block;\n}\n\n.container {\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  border: 1px solid black;\n  padding: 0.5rem;\n\n  .item {\n    flex: 1 1 calc(100% / 5 - 0.75rem * 2 - 0.5rem * 2);\n    padding: 0.5rem 0.75rem;\n    font-size: 1rem;\n  }\n\n  .sold-out {\n    color: $danger-color;\n    display: inline;\n  }\n\n  .food-choice-form {\n    margin-left: 0.75rem;\n    margin-right: 0.75rem;\n  }\n}\n",
          "styleUrl": "./food-choice.component.scss"
        }
      ],
      "stylesData": "",
      "implements": ["OnInit", "OnChanges"],
      "templateData": "<div class=\"container\">\n  <label name=\"name\" class=\"item\">\n    <span class=\"field\">Name:</span>\n    <span class=\"field-text\">{{ choice.name }}</span>\n  </label>\n  <label name=\"description\" class=\"item\">\n    <span class=\"field\">Description:</span>\n    <span class=\"field-text\">{{ choice.description }}</span>\n  </label>\n  <label name=\"price\" class=\"item\">\n    <span class=\"field\">Price:</span>\n    <span class=\"field-text\">{{ choice.currency }} {{ choice.price }}</span>\n  </label>\n  <label name=\"quantity\" class=\"item\">\n    <span class=\"field\">Quantity:</span>\n    <span class=\"field-text\">{{ remained }}</span>\n  </label>\n  <ng-container [ngSwitch]=\"remained > 0\">\n    <app-food-choice-form\n      class=\"food-choice-form\"\n      [choice]=\"choice\"\n      (foodChoiceSubmitted)=\"submitFoodChoice($event)\"\n      *ngSwitchCase=\"true\"\n    >\n    </app-food-choice-form>\n    <ng-container *ngSwitchDefault>\n      <ng-container *ngTemplateOutlet=\"soldout; context: { choice: choice }\"> </ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-template #soldout let-choice=\"choice\">\n    <span class=\"item sold-out\">Sorry, {{ choice.name }} is sold out</span>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "FoodChoiceFormComponent",
      "id": "component-FoodChoiceFormComponent-71f691f933fd41b85514b6ffb62994da",
      "file": "src/app/food/food-choice-form/food-choice-form.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-choice-form",
      "styleUrls": ["./food-choice-form.component.scss"],
      "styles": [],
      "templateUrl": ["./food-choice-form.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "choice",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "Choice"
        }
      ],
      "outputsClass": [
        {
          "name": "foodChoiceSubmitted",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "form",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "processing",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "submitChoice$",
          "defaultValue": "new Subject<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Subject } from 'rxjs'\nimport { delay, map, takeUntil, tap } from 'rxjs/operators'\n\nimport { fulfillOrderValidator } from '../directives'\nimport { Choice } from '../interfaces'\nimport { FoodService } from '../services'\n\n@Component({\n  selector: 'app-food-choice-form',\n  templateUrl: './food-choice-form.component.html',\n  styleUrls: ['./food-choice-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodChoiceFormComponent implements OnInit, OnDestroy {\n  @Input()\n  choice: Choice\n\n  @Output()\n  foodChoiceSubmitted = new EventEmitter<number>()\n\n  submitChoice$ = new Subject<Event>()\n  unsubscribe$ = new Subject<boolean>()\n  processing = false\n\n  form: FormGroup\n\n  constructor(private fb: FormBuilder, private foodService: FoodService) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      quantity: new FormControl(1, {\n        validators: [Validators.required, Validators.min(1), fulfillOrderValidator(this.choice.id, this.foodService)],\n        updateOn: 'blur',\n      }),\n    })\n\n    this.submitChoice$\n      .pipe(\n        tap(($event) => {\n          $event.preventDefault()\n          $event.stopPropagation()\n          this.processing = true\n        }),\n        delay(1000),\n        map(() => this.form.value),\n        map(({ quantity }) => +quantity),\n        tap(() => (this.processing = false)),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((quantity) => this.foodChoiceSubmitted.emit(quantity))\n  }\n\n  get quantity(): FormControl | undefined {\n    if (!this.form) {\n      return undefined\n    }\n    return this.form.get('quantity') as FormControl\n  }\n\n  get quantityRemained(): number {\n    return this.foodService.getQuantity(this.choice.id)\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.complete()\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "$danger-color: #a94442;\n\n:host {\n  display: block;\n}\n\n.container {\n  padding: 0.5rem 0;\n\n  .ng-invalid:not(form) {\n    border-left: 5px solid $danger-color;\n  }\n\n  .alert {\n    display: inline;\n    &-danger {\n      color: $danger-color;\n      .error {\n        display: inline;\n        margin-right: 0.5rem;\n      }\n    }\n  }\n\n  .processing {\n    color: $danger-color;\n    display: inline;\n    margin-right: 0.5rem;\n  }\n\n  .item .spacer {\n    margin-right: 0.5rem;\n  }\n}\n",
          "styleUrl": "./food-choice-form.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 27,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "accessors": {
        "quantity": {
          "name": "quantity",
          "getSignature": {
            "name": "quantity",
            "type": "",
            "returnType": "FormControl | undefined",
            "line": 55
          }
        },
        "quantityRemained": {
          "name": "quantityRemained",
          "getSignature": {
            "name": "quantityRemained",
            "type": "number",
            "returnType": "number",
            "line": 62
          }
        }
      },
      "templateData": "<form class=\"container\" [formGroup]=\"form\" (ngSubmit)=\"submitChoice$.next($event)\">\n  <label name=\"quantity\" class=\"item\">\n    <span class=\"field\">Quantity: </span>\n    <input type=\"number\" formControlName=\"quantity\" class=\"spacer\" [readonly]=\"quantityRemained <= 0\" />\n  </label>\n  <div *ngIf=\"quantity && quantity.invalid && (quantity.touched || quantity.dirty)\" class=\"alert alert-danger\">\n    <div *ngIf=\"quantity.errors?.min\" class=\"error\">Quantity must be at least {{ quantity.errors?.min?.min }}.</div>\n    <div *ngIf=\"quantity.errors?.notEnoughQuantity\" class=\"error\">\n      Cannot order more than {{ quantity.errors?.notEnoughQuantity.quantityRemained }}.\n    </div>\n  </div>\n  <div *ngIf=\"processing\" class=\"alert\">\n    <div class=\"processing\">Loading...</div>\n  </div>\n  <button type=\"submit\" [disabled]=\"processing || form.invalid || quantityRemained <= 0\">Submit</button>\n</form>\n"
    },
    {
      "name": "FoodMenuCardComponent",
      "id": "component-FoodMenuCardComponent-a032f38dec59e7acc66b3a680112ae70",
      "file": "src/app/food/food-menu-card/food-menu-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-menu-card",
      "styleUrls": [],
      "styles": [],
      "template": "<div>   <ng-content select=\"[head]\"></ng-content>\n   <ng-content select=\"[body]\"></ng-content>\n </div>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-food-menu-card',\n  template: ` <div>\n    <ng-content select=\"[head]\"></ng-content>\n    <ng-content select=\"[body]\"></ng-content>\n  </div>`,\n})\nexport class FoodMenuCardComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "FoodMenuComponent",
      "id": "component-FoodMenuComponent-60fc1eeccf37ff4e10c1ce68b54eb79f",
      "file": "src/app/food/food-menu/food-menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-menu",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./food-menu.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "addDynamicFoodChoice",
          "defaultValue": "new EventEmitter<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "handleFoodChoiceSub$",
          "defaultValue": "new Subject<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "menuItems$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<[] | undefined>",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "qtyMap",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | number> | undefined",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "choiceTrackByFn",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "choice",
              "type": "Choice",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "choice",
              "type": "Choice",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "menumItemTrackByFn",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "menuItem",
              "type": "MenuItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string | number",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "menuItem",
              "type": "MenuItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\nimport { takeUntil, tap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\n\nimport { Choice, MenuItem, OrderedFoodChoice } from '../interfaces'\nimport { FoodService } from '../services'\n\n@Component({\n  selector: 'app-food-menu',\n  templateUrl: './food-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodMenuComponent implements OnInit, OnDestroy {\n  @Output()\n  addDynamicFoodChoice = new EventEmitter<OrderedFoodChoice>()\n\n  menuItems$: Observable<MenuItem[] | undefined>\n  handleFoodChoiceSub$ = new Subject<OrderedFoodChoice>()\n  unsubscribe$ = new Subject<boolean>()\n\n  qtyMap: Record<string, number> | undefined\n\n  constructor(private service: FoodService) {}\n\n  ngOnInit(): void {\n    this.menuItems$ = this.service.getFood(environment.menuUrl).pipe(takeUntil(this.unsubscribe$))\n\n    this.service.quantityAvailableMap$.pipe(takeUntil(this.unsubscribe$)).subscribe((updatedQtyMap) => {\n      if (!updatedQtyMap) {\n        this.qtyMap = undefined\n      } else {\n        this.qtyMap = {\n          ...updatedQtyMap,\n        }\n      }\n    })\n\n    this.handleFoodChoiceSub$\n      .pipe(\n        tap((choice) => console.log(choice)),\n        tap(({ id, quantity }) => this.service.updateQuantity(id, quantity)),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((choice) => {\n        this.addDynamicFoodChoice.emit(choice)\n      })\n  }\n\n  menumItemTrackByFn(index: number, menuItem: MenuItem): string | number {\n    return menuItem ? menuItem.id : index\n  }\n\n  choiceTrackByFn(index: number, choice: Choice) {\n    return choice ? choice.id : index\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.unsubscribe()\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "service",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "service",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div class=\"container\" *ngIf=\"menuItems$ | async as menuItems; else notAvailable\">\n  <app-food-menu-card *ngFor=\"let menuItem of menuItems; index as i; trackBy: menumItemTrackByFn\">\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice\n        [choice]=\"choice\"\n        [qtyMap]=\"qtyMap\"\n        (foodChoiceAdded)=\"handleFoodChoiceSub$.next($event)\"\n      ></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>\n  <!-- <pre>\n    {{ qtyMap | json }}\n  </pre> -->\n</div>\n<ng-template #notAvailable>No menu</ng-template>\n"
    },
    {
      "name": "FoodQuestionComponent",
      "id": "component-FoodQuestionComponent-a9a6709912947dab77c944159908cc50",
      "file": "src/app/food/food-question/food-question.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-question",
      "styleUrls": ["./food-question.component.scss"],
      "styles": [],
      "templateUrl": ["./food-question.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "question",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-food-question',\n  templateUrl: './food-question.component.html',\n  styleUrls: ['./food-question.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodQuestionComponent {\n  @Input()\n  question: string\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\n  display: block;\n}\n\n.container {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n\n  label.item {\n    padding: 0.5rem 0.75rem;\n    display: flex;\n\n    .field-text {\n      flex: 1 1 auto;\n    }\n  }\n}\n",
          "styleUrl": "./food-question.component.scss"
        }
      ],
      "stylesData": "",
      "templateData": "<div class=\"container\">\n  <label name=\"question\" class=\"item\">\n    <span class=\"field\">Question:</span>\n    <span class=\"field-text\">{{ question }}</span>\n  </label>\n</div>\n"
    },
    {
      "name": "FoodShellComponent",
      "id": "component-FoodShellComponent-5541262bdb9f97849c981599250f9012",
      "file": "src/app/food/food-shell/food-shell.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-shell",
      "styleUrls": ["./food-shell.component.scss"],
      "styles": [],
      "templateUrl": ["./food-shell.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core'\n\n@Component({\n  selector: 'app-food-shell',\n  templateUrl: './food-shell.component.html',\n  styleUrls: ['./food-shell.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodShellComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./food-shell.component.scss"
        }
      ],
      "stylesData": "",
      "templateData": "<p>Angular Nation Special Menu</p>\n<app-food-menu></app-food-menu>\n"
    },
    {
      "name": "FoodTotalComponent",
      "id": "component-FoodTotalComponent-26b6c6340234dabb76aa8e75555bedbf",
      "file": "src/app/food/food-total/food-total.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-total",
      "styleUrls": [],
      "styles": [
        "\n      :host {\n        display: block;\n      }\n\n      .container {\n        padding: 0.5rem;\n        border: 1px solid black;\n        display: flex;\n      }\n\n      button {\n        margin-right: 0.5rem;\n        margin-bottom: 0.25rem;\n      }\n    "
      ],
      "template": "<div class=\"container\">\n  <button [disabled]=\"!choices || choices.length <= 0\" (click)=\"calculate()\">Give me the check</button>\n  <div>\n    <span>Total: {{ choices?.[0]?.currency || '' }} {{ total }}</span>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "choices",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "OrderedFoodChoice[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "total",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "methodsClass": [
        {
          "name": "calculate",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input } from '@angular/core'\n\nimport { OrderedFoodChoice } from '../interfaces'\nimport { FoodService } from '../services'\n\n@Component({\n  selector: 'app-food-total',\n  template: `\n    <div class=\"container\">\n      <button [disabled]=\"!choices || choices.length <= 0\" (click)=\"calculate()\">Give me the check</button>\n      <div>\n        <span>Total: {{ choices?.[0]?.currency || '' }} {{ total }}</span>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      .container {\n        padding: 0.5rem;\n        border: 1px solid black;\n        display: flex;\n      }\n\n      button {\n        margin-right: 0.5rem;\n        margin-bottom: 0.25rem;\n      }\n    `,\n  ],\n})\nexport class FoodTotalComponent {\n  @Input()\n  choices: OrderedFoodChoice[] = []\n\n  total = 0\n\n  constructor(private foodService: FoodService) {}\n\n  calculate(): void {\n    this.total = this.foodService.calculateTotal(this.choices)\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n\n      .container {\n        padding: 0.5rem;\n        border: 1px solid black;\n        display: flex;\n      }\n\n      button {\n        margin-right: 0.5rem;\n        margin-bottom: 0.25rem;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 39,
        "jsdoctags": [
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "id": "module-AppModule-3b6b71dee5182dd2b0f81203cd65e5e1",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app.module.ts",
      "methods": [],
      "sourceCode": "import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppComponent } from './app.component'\nimport { AppRoutingModule } from './app-routing.module'\nimport { FoodModule } from './food'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, AppRoutingModule, FoodModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AppRoutingModule"
            },
            {
              "name": "FoodModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AppRoutingModule",
      "id": "module-AppRoutingModule-3ed2f11f86fd8eb5069bac810c153493",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app-routing.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = [\n  {\n    path: 'food',\n    loadChildren: () => \"import('./food/food.module').then((m) => m.FoodModule)\",\n  },\n  {\n    path: '',\n    redirectTo: 'food',\n    pathMatch: 'full',\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodModule",
      "id": "module-FoodModule-c9ef9b41032c8c67212feac71d5bdadf",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { FoodCardComponent } from './food-card'\nimport { FoodChoiceComponent } from './food-choice'\nimport { FoodChoiceFormComponent } from './food-choice-form'\nimport { FoodMenuComponent } from './food-menu'\nimport { FoodMenuCardComponent } from './food-menu-card'\nimport { FoodQuestionComponent } from './food-question'\nimport { FoodRoutingModule } from './food-routing.module'\nimport { FoodShellComponent } from './food-shell'\nimport { FoodTotalComponent } from './food-total'\n\n@NgModule({\n  declarations: [\n    FoodCardComponent,\n    FoodQuestionComponent,\n    FoodChoiceComponent,\n    FoodMenuComponent,\n    FoodMenuCardComponent,\n    FoodTotalComponent,\n    FoodChoiceFormComponent,\n    FoodShellComponent,\n  ],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, FoodRoutingModule],\n})\nexport class FoodModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodCardComponent"
            },
            {
              "name": "FoodChoiceComponent"
            },
            {
              "name": "FoodChoiceFormComponent"
            },
            {
              "name": "FoodMenuCardComponent"
            },
            {
              "name": "FoodMenuComponent"
            },
            {
              "name": "FoodQuestionComponent"
            },
            {
              "name": "FoodShellComponent"
            },
            {
              "name": "FoodTotalComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FoodRoutingModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodRoutingModule",
      "id": "module-FoodRoutingModule-00c33746945bdd15d0dd87f4c7cfaaf5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-routing.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { FoodShellComponent } from './food-shell'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodShellComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FoodRoutingModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "data",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n        },\n      ],\n    },\n  ],\n}"
      },
      {
        "name": "data",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "dist/ng-spanish-menu/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n        },\n      ],\n    },\n  ],\n}"
      },
      {
        "name": "DisableSubmit",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Empty",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  menuUrl: '/.netlify/functions/menu',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  menuUrl: 'https://mystifying-panini-99633b.netlify.app/.netlify/functions/menu',\n}"
      },
      {
        "name": "FoodMenuCardTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodMenuCardComponent>",
        "defaultValue": "(args: FoodMenuCardComponent) => ({\n  props: {\n    ...args,\n    foodChoiceAdded: action('foodChoiceAdded'),\n  },\n  template: `<app-food-menu-card>\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice [choice]=\"choice\" [qtyMap]=\"qtyMap\" (foodChoiceAdded)=\"foodChoiceAdded($event)\"></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>`,\n})"
      },
      {
        "name": "handler",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Handler",
        "defaultValue": "async (event) => {\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
      },
      {
        "name": "handler",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "dist/ng-spanish-menu/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Handler",
        "defaultValue": "async (event) => {\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
      },
      {
        "name": "LongDescription",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LongQuestion",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Menu",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MockData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/storybook-mock/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 10,\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 10,\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 10,\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 10,\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 10,\n      },\n    ],\n  },\n]"
      },
      {
        "name": "NoOrder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FoodMenuCardTemplate.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "qtyMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
      },
      {
        "name": "qtyMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  [MockData[0].choices[1].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "literal type"
      },
      {
        "name": "SimpleQuestion",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Soldout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Soldout",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FoodMenuCardTemplate.bind({})"
      },
      {
        "name": "SoldoutMenu",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SoldOutMockData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/storybook-mock/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 0,\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n      },\n    ],\n  },\n]"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodCardComponent>",
        "defaultValue": "(args: FoodCardComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodChoiceComponent>",
        "defaultValue": "(args: FoodChoiceComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodChoiceFormComponent>",
        "defaultValue": "(args: FoodChoiceFormComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodMenuComponent>",
        "defaultValue": "(args: FoodMenuComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodQuestionComponent>",
        "defaultValue": "(args: FoodQuestionComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodTotalComponent>",
        "defaultValue": "(args: FoodTotalComponent) => ({\n  props: args,\n})"
      }
    ],
    "functions": [
      {
        "name": "fulfillOrderValidator",
        "file": "src/app/food/directives/fulfill-order-validator.directive.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "choiceId",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "foodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "ValidatorFn",
        "jsdoctags": [
          {
            "name": "choiceId",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "foodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [],
    "groupedVariables": {
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type"
        }
      ],
      "src/assets/functions/menu.ts": [
        {
          "name": "data",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n        },\n      ],\n    },\n  ],\n}"
        },
        {
          "name": "handler",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Handler",
          "defaultValue": "async (event) => {\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
        }
      ],
      "dist/ng-spanish-menu/assets/functions/menu.ts": [
        {
          "name": "data",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "dist/ng-spanish-menu/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n        },\n      ],\n    },\n  ],\n}"
        },
        {
          "name": "handler",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "dist/ng-spanish-menu/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Handler",
          "defaultValue": "async (event) => {\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n      },\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
        }
      ],
      "src/app/food/food-choice-form/food-choice-form.stories.ts": [
        {
          "name": "DisableSubmit",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodChoiceFormComponent>",
          "defaultValue": "(args: FoodChoiceFormComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-menu/food-menu.stories.ts": [
        {
          "name": "Empty",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Menu",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SoldoutMenu",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodMenuComponent>",
          "defaultValue": "(args: FoodMenuComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  menuUrl: '/.netlify/functions/menu',\n}"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  menuUrl: 'https://mystifying-panini-99633b.netlify.app/.netlify/functions/menu',\n}"
        }
      ],
      "src/app/food/food-menu-card/food-menu-card.stories.ts": [
        {
          "name": "FoodMenuCardTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodMenuCardComponent>",
          "defaultValue": "(args: FoodMenuCardComponent) => ({\n  props: {\n    ...args,\n    foodChoiceAdded: action('foodChoiceAdded'),\n  },\n  template: `<app-food-menu-card>\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice [choice]=\"choice\" [qtyMap]=\"qtyMap\" (foodChoiceAdded)=\"foodChoiceAdded($event)\"></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>`,\n})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FoodMenuCardTemplate.bind({})"
        },
        {
          "name": "qtyMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  [MockData[0].choices[1].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
        },
        {
          "name": "Soldout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FoodMenuCardTemplate.bind({})"
        }
      ],
      "src/app/food/food-card/food-card.stories.ts": [
        {
          "name": "LongDescription",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodCardComponent>",
          "defaultValue": "(args: FoodCardComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-question/food-question.stories.ts": [
        {
          "name": "LongQuestion",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleQuestion",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodQuestionComponent>",
          "defaultValue": "(args: FoodQuestionComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/storybook-mock/constants.ts": [
        {
          "name": "MockData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/storybook-mock/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 10,\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 10,\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 10,\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 10,\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 10,\n      },\n    ],\n  },\n]"
        },
        {
          "name": "SoldOutMockData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/storybook-mock/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 0,\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n      },\n    ],\n  },\n]"
        }
      ],
      "src/app/food/food-total/food-total.stories.ts": [
        {
          "name": "NoOrder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodTotalComponent>",
          "defaultValue": "(args: FoodTotalComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-choice/food-choice.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "qtyMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
        },
        {
          "name": "Soldout",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodChoiceComponent>",
          "defaultValue": "(args: FoodChoiceComponent) => ({\n  props: args,\n})"
        }
      ]
    },
    "groupedFunctions": {
      "src/app/food/directives/fulfill-order-validator.directive.ts": [
        {
          "name": "fulfillOrderValidator",
          "file": "src/app/food/directives/fulfill-order-validator.directive.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "choiceId",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "foodService",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "ValidatorFn",
          "jsdoctags": [
            {
              "name": "choiceId",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "foodService",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {},
    "groupedTypeAliases": {}
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "className": "AppModule",
    "children": [
      {
        "name": "routes",
        "filename": "src/app/app-routing.module.ts",
        "module": "AppRoutingModule",
        "children": [
          {
            "path": "food",
            "loadChildren": "./food/food.module#FoodModule"
          },
          {
            "path": "",
            "redirectTo": "food",
            "pathMatch": "full"
          }
        ],
        "kind": "module"
      },
      {
        "name": "routes",
        "filename": "src/app/food/food-routing.module.ts",
        "module": "FoodRoutingModule",
        "children": [
          {
            "path": "",
            "component": "FoodShellComponent"
          }
        ],
        "kind": "module"
      }
    ]
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "dist/ng-spanish-menu/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "data",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "dist/ng-spanish-menu/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "handler",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/directives/fulfill-order-validator.directive.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "fulfillOrderValidator",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongDescription",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodChoiceFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisableSubmit",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodChoiceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "qtyMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Soldout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodMenuCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FoodMenuCardTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "qtyMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Soldout",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Empty",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Menu",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldoutMenu",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodQuestionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongQuestion",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleQuestion",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-shell/food-shell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodShellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodTotalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NoOrder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Choice",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Menu",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MenuItem",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Quantity",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/ordered-choice.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "OrderedFoodChoice",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/food/services/food.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "FoodService",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MockData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldOutMockData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/mock.ts",
        "type": "class",
        "linktype": "classe",
        "name": "MockFoodService",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "data",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "handler",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
