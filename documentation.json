{
  "pipes": [],
  "interfaces": [
    {
      "name": "Choice",
      "id": "interface-Choice-5230c52ba5b645f9fe0c7173e6042a00",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n  ingredients: string\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n",
      "properties": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "ingredients",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "FoodServiceInterface",
      "id": "interface-FoodServiceInterface-834ddeb0084c851ce4c41a42e0141530",
      "file": "src/app/food/interfaces/food-service.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Observable } from 'rxjs'\n\nimport { MenuItem } from './menu.interface'\nimport { PriceQuantity } from './price-quantity.interface'\nimport { TotalCost } from './total.interface'\n\nexport interface FoodServiceInterface {\n  getFood(url: string): Observable<MenuItem[] | undefined>\n  calculateTotal(food: PriceQuantity[], tip: number): TotalCost\n  updateQuantity(id: string, quantity: number): void\n  getQuantity(id: string): number\n  getTips(url: string): Observable<number[]>\n}\n",
      "properties": [],
      "indexSignatures": [],
      "kind": 166,
      "methods": [
        {
          "name": "calculateTotal",
          "args": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "TotalCost",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFood",
          "args": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<[] | undefined>",
          "typeParameters": [],
          "line": 8,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getTips",
          "args": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<number[]>",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "FormValueQuantity",
      "id": "interface-FormValueQuantity-922d7f6c18c5e9707c4f5323e01f8f4c",
      "file": "src/app/food/food-choice-form/interfaces/form-value-quantity.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { FormGroup } from '@angular/forms'\n\nexport interface FormValueQuantity extends FormGroup {\n  value: {\n    quantity: number\n  }\n}\n",
      "properties": [
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": [],
      "extends": "FormGroup"
    },
    {
      "name": "Menu",
      "id": "interface-Menu-5230c52ba5b645f9fe0c7173e6042a00",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n  ingredients: string\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n",
      "properties": [
        {
          "name": "menu",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "MenuItem",
      "id": "interface-MenuItem-5230c52ba5b645f9fe0c7173e6042a00",
      "file": "src/app/food/interfaces/menu.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Choice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n  ingredients: string\n}\n\nexport interface Menu {\n  menu: MenuItem[]\n}\nexport interface MenuItem {\n  id: string\n  question: string\n  choices: Choice[]\n}\n",
      "properties": [
        {
          "name": "choices",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Choice[]",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "question",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "OrderedFoodChoice",
      "id": "interface-OrderedFoodChoice-3952981fd4d16ee1c43868baaa7e0a96",
      "file": "src/app/food/interfaces/ordered-choice.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface OrderedFoodChoice {\n  id: string\n  name: string\n  description: string\n  currency: string\n  price: number\n  quantity: number\n}\n",
      "properties": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "PriceQuantity",
      "id": "interface-PriceQuantity-eefe41a60cb20006ccd6faf1d5c5e26a",
      "file": "src/app/food/interfaces/price-quantity.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface PriceQuantity {\n  price: number\n  quantity: number\n}\n",
      "properties": [
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "SimpleChangeQuantityMap",
      "id": "interface-SimpleChangeQuantityMap-65ff86be516db3ba63752c34b1533685",
      "file": "src/app/food/food-choice/interfaces/simple-change.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface SimpleChangeQuantityMap {\n  currentValue: { [key: string]: number }\n  previousValue: { [key: string]: number }\n  firstChange: boolean\n  isFirstChange(): boolean\n}\n",
      "properties": [
        {
          "name": "currentValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "firstChange",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "previousValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 166,
      "methods": [
        {
          "name": "isFirstChange",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 5,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ]
    },
    {
      "name": "Tip",
      "id": "interface-Tip-a20fc0f056db04ff89b25c6e54ae73f5",
      "file": "src/app/food/interfaces/tip.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface Tip {\n  tips: number[]\n}\n",
      "properties": [
        {
          "name": "tips",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "TotalCost",
      "id": "interface-TotalCost-301f55f8b9aecb46f0a7baa4668d4889",
      "file": "src/app/food/interfaces/total.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface TotalCost {\n  total: number\n  totalTip: number\n  subTotal: number\n}\n",
      "properties": [
        {
          "name": "subTotal",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "totalTip",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "FoodService",
      "id": "injectable-FoodService-e787eb91ade5027f0837ae8922bf593f",
      "file": "src/app/food/services/food.service.ts",
      "properties": [
        {
          "name": "quantityAvailableMap$",
          "defaultValue": "this.quantityAvailableSub$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "quantityAvailableSub$",
          "defaultValue": "new BehaviorSubject<Record<string, number> | undefined>(undefined)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [121]
        }
      ],
      "methods": [
        {
          "name": "calculateTotal",
          "args": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "0"
            }
          ],
          "optional": false,
          "returnType": "TotalCost",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "0",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFood",
          "args": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<[] | undefined>",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getTips",
          "args": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Observable<number[]>",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "url",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "roundAmount",
          "args": [
            {
              "name": "amount",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 104,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "amount",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { HttpClient } from '@angular/common/http'\nimport { Injectable } from '@angular/core'\nimport { BehaviorSubject, Observable, of } from 'rxjs'\nimport { catchError, pluck, share, tap } from 'rxjs/operators'\n\nimport { FoodServiceInterface, Menu, MenuItem, PriceQuantity, Tip, TotalCost } from '../interfaces'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FoodService implements FoodServiceInterface {\n  // #region Properties (2)\n\n  private quantityAvailableSub$ = new BehaviorSubject<Record<string, number> | undefined>(undefined)\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  quantityAvailableMap$ = this.quantityAvailableSub$.asObservable()\n\n  // #endregion Properties (2)\n\n  // #region Constructors (1)\n\n  constructor(private http: HttpClient) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (5)\n\n  public calculateTotal(food: PriceQuantity[], tip = 0): TotalCost {\n    const unroundedTotal = food.reduce((acc, choice) => {\n      const { price, quantity } = choice\n      return acc + price * quantity\n    }, 0)\n\n    const subTotal = this.roundAmount(unroundedTotal)\n    const totalTip = this.roundAmount(unroundedTotal * tip)\n    const total = this.roundAmount(subTotal + totalTip)\n\n    return {\n      subTotal,\n      totalTip,\n      total,\n    }\n  }\n\n  public getFood(url: string): Observable<MenuItem[] | undefined> {\n    return this.http.get<Menu>(url).pipe(\n      pluck('menu'),\n      tap((menu) => {\n        console.log('menu', menu)\n        const qtyMap = menu.reduce((acc, mi) => {\n          mi.choices.forEach(({ id, quantity }) => {\n            acc[id] = quantity\n          })\n          return acc\n        }, {} as Record<string, number>)\n        this.quantityAvailableSub$.next(qtyMap)\n      }),\n      catchError((err: Error) => {\n        console.error(err)\n        return of(undefined)\n      }),\n      share(),\n    )\n  }\n\n  public getQuantity(id: string): number {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      return qtyAvailableMap[id] || 0\n    }\n    return 0\n  }\n\n  public getTips(url: string): Observable<number[]> {\n    return this.http.get<Tip>(url).pipe(\n      pluck('tips'),\n      catchError((err: Error) => {\n        console.error(err)\n        return of([0])\n      }),\n      share(),\n    )\n  }\n\n  public updateQuantity(id: string, quantity: number): void {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      const oldQty = qtyAvailableMap[id]\n      const nextQty = oldQty - quantity\n      if (nextQty >= 0) {\n        this.quantityAvailableSub$.next({\n          ...qtyAvailableMap,\n          [id]: nextQty,\n        })\n      }\n    }\n  }\n\n  // #endregion Public Methods (5)\n\n  // #region Private Methods (1)\n\n  private roundAmount(amount: number): number {\n    const cents = 100\n\n    return Math.round(amount * cents) / cents\n  }\n\n  // #endregion Private Methods (1)\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [
    {
      "name": "MockFoodService",
      "id": "class-MockFoodService-6e70b88bcf45670c83b3b0090f8d2f68",
      "file": "src/app/food/storybook-mock/mock.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { BehaviorSubject, Observable, of } from 'rxjs'\n\nimport { FoodServiceInterface, MenuItem, PriceQuantity, TotalCost } from '../interfaces'\n\nexport class MockFoodService implements FoodServiceInterface {\n  // #region Properties (2)\n\n  private quantityAvailableSub$ = new BehaviorSubject<Record<string, number> | undefined>(undefined)\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  quantityAvailableMap$ = this.quantityAvailableSub$.asObservable()\n\n  // #endregion Properties (2)\n\n  // #region Constructors (1)\n\n  constructor(private menuItems?: MenuItem[]) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (5)\n\n  public calculateTotal(food: PriceQuantity[], tip = 0): TotalCost {\n    const unroundedTotal = food.reduce((acc, choice) => {\n      const { price, quantity } = choice\n      return acc + price * quantity\n    }, 0)\n\n    const subTotal = this.roundAmount(unroundedTotal)\n    const totalTip = this.roundAmount(unroundedTotal * tip)\n    const total = this.roundAmount(unroundedTotal + totalTip)\n\n    return {\n      subTotal,\n      totalTip,\n      total,\n    }\n  }\n\n  public getFood(): Observable<MenuItem[] | undefined> {\n    const qtyMap = this.buildQtyMap()\n    this.quantityAvailableSub$.next(qtyMap)\n    return of(this.menuItems)\n  }\n\n  public getQuantity(id: string): number {\n    const qtyAvailableMap = this.getLatestQtyMap()\n    if (qtyAvailableMap) {\n      return qtyAvailableMap[id] || 0\n    }\n    return 0\n  }\n\n  public getTips(): Observable<number[]> {\n    return of([0, 5, 10, 15, 20])\n  }\n\n  public updateQuantity(id: string, quantity: number): void {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (qtyAvailableMap) {\n      const oldQty = qtyAvailableMap[id]\n      const nextQty = oldQty - quantity\n      if (nextQty >= 0) {\n        this.quantityAvailableSub$.next({\n          ...qtyAvailableMap,\n          [id]: nextQty,\n        })\n      }\n    }\n  }\n\n  // #endregion Public Methods (5)\n\n  // #region Private Methods (3)\n\n  private buildQtyMap(): Record<string, number> | undefined {\n    if (!this.menuItems) {\n      return undefined\n    }\n    return this.menuItems.reduce((acc, mi) => {\n      mi.choices.forEach(({ id, quantity }) => {\n        acc[id] = quantity\n      })\n      return acc\n    }, {} as Record<string, number>)\n  }\n\n  private getLatestQtyMap() {\n    const qtyAvailableMap = this.quantityAvailableSub$.getValue()\n    if (!qtyAvailableMap) {\n      const qtyMap = this.buildQtyMap()\n      this.quantityAvailableSub$.next(qtyMap)\n    }\n    return this.quantityAvailableSub$.getValue()\n  }\n\n  private roundAmount(amount: number): number {\n    const cents = 100\n\n    return Math.round(amount * cents) / cents\n  }\n\n  // #endregion Private Methods (3)\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "menuItems",
            "type": "MenuItem[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "menuItems",
            "type": "MenuItem[]",
            "deprecated": false,
            "deprecationMessage": "",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "properties": [
        {
          "name": "quantityAvailableMap$",
          "defaultValue": "this.quantityAvailableSub$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "quantityAvailableSub$",
          "defaultValue": "new BehaviorSubject<Record<string, number> | undefined>(undefined)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [121]
        }
      ],
      "methods": [
        {
          "name": "buildQtyMap",
          "args": [],
          "optional": false,
          "returnType": "Record | undefined",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "calculateTotal",
          "args": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "0"
            }
          ],
          "optional": false,
          "returnType": "TotalCost",
          "typeParameters": [],
          "line": 23,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "food",
              "type": "PriceQuantity[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "0",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFood",
          "args": [],
          "optional": false,
          "returnType": "Observable<[] | undefined>",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "getLatestQtyMap",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 88,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "getQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getTips",
          "args": [],
          "optional": false,
          "returnType": "Observable<number[]>",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "roundAmount",
          "args": [
            {
              "name": "amount",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 97,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "amount",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateQuantity",
          "args": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 58,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "id",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "quantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["FoodServiceInterface"]
    }
  ],
  "directives": [],
  "components": [
    {
      "name": "AppComponent",
      "id": "component-AppComponent-e10e50136a9eb3f6a469fb6f9ece678d",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": [],
      "styles": [],
      "template": "<router-outlet></router-outlet>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n  styles: [],\n})\nexport class AppComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "FoodCardComponent",
      "id": "component-FoodCardComponent-15b9dc82b12b1ea1560dbae800c5c2fc",
      "file": "src/app/food/food-card/food-card.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-card",
      "styleUrls": [],
      "styles": [
        "\n      :host {\n        display: block;\n      }\n\n      .card-row {\n        margin-bottom: 0.5rem;\n        padding: 0.5rem 0.75rem;\n        line-height: 1.5rem;\n      }\n    "
      ],
      "template": "<div class=\"flex flex-col w-[300px] rounded-xl box-border-indigo shadow-md shadow-indigo-500/50 mr-2\">\n  <label name=\"name\" class=\"item card-row\">\n    <span class=\"field\">Name:</span>\n    <span class=\"hover:font-bold field-text\">{{ ordered.name }}</span>\n  </label>\n  <label class=\"item card-row\" name=\"description\">\n    <span class=\"field\">Description:</span>\n    <span class=\"hover:font-bold field-text\">{{ ordered.description }}</span>\n  </label>\n  <label class=\"item card-row\" name=\"price\">\n    <span class=\"field\">Price:</span>\n    <span class=\"hover:font-bold field-text\">{{ ordered.currency }} {{ ordered.price }}</span>\n  </label>\n  <label class=\"item card-row\" name=\"quantity\">\n    <span class=\"field\">Quantity:</span>\n    <span class=\"hover:font-bold field-text\">{{ ordered.quantity }}</span>\n  </label>\n  <label class=\"item card-row\" name=\"total\">\n    <span class=\"field\">Total:</span>\n    <span class=\"hover:font-bold field-text\">{{ ordered.currency }} {{ total }}</span>\n  </label>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ordered",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "OrderedFoodChoice"
        },
        {
          "name": "total",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\nimport { OrderedFoodChoice } from '../interfaces'\n\n@Component({\n  selector: 'app-food-card',\n  template: `\n    <div class=\"flex flex-col w-[300px] rounded-xl box-border-indigo shadow-md shadow-indigo-500/50 mr-2\">\n      <label name=\"name\" class=\"item card-row\">\n        <span class=\"field\">Name:</span>\n        <span class=\"hover:font-bold field-text\">{{ ordered.name }}</span>\n      </label>\n      <label class=\"item card-row\" name=\"description\">\n        <span class=\"field\">Description:</span>\n        <span class=\"hover:font-bold field-text\">{{ ordered.description }}</span>\n      </label>\n      <label class=\"item card-row\" name=\"price\">\n        <span class=\"field\">Price:</span>\n        <span class=\"hover:font-bold field-text\">{{ ordered.currency }} {{ ordered.price }}</span>\n      </label>\n      <label class=\"item card-row\" name=\"quantity\">\n        <span class=\"field\">Quantity:</span>\n        <span class=\"hover:font-bold field-text\">{{ ordered.quantity }}</span>\n      </label>\n      <label class=\"item card-row\" name=\"total\">\n        <span class=\"field\">Total:</span>\n        <span class=\"hover:font-bold field-text\">{{ ordered.currency }} {{ total }}</span>\n      </label>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      .card-row {\n        margin-bottom: 0.5rem;\n        padding: 0.5rem 0.75rem;\n        line-height: 1.5rem;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodCardComponent {\n  // #region Properties (2)\n\n  @Input()\n  public ordered: OrderedFoodChoice\n  @Input()\n  public total: number\n\n  // #endregion Properties (2)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n\n      .card-row {\n        margin-bottom: 0.5rem;\n        padding: 0.5rem 0.75rem;\n        line-height: 1.5rem;\n      }\n    \n"
    },
    {
      "name": "FoodChoiceComponent",
      "id": "component-FoodChoiceComponent-f45a9d20a3d1bf5a19ff7ef0aef6b99c",
      "file": "src/app/food/food-choice/food-choice.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-choice",
      "styleUrls": ["./food-choice.component.scss"],
      "styles": [],
      "templateUrl": ["./food-choice.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "choice",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "Choice"
        },
        {
          "name": "qtyMap",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "Record<string | number> | undefined | null"
        }
      ],
      "outputsClass": [
        {
          "name": "foodChoiceAdded",
          "defaultValue": "new EventEmitter<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "componentRef",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ComponentRef<> | null",
          "optional": false,
          "description": "",
          "line": 44,
          "modifierKind": [123]
        },
        {
          "name": "lowSupplierRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'lowSupplyRef', {read: ElementRef, static: true}"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "minimumSupply",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [123]
        },
        {
          "name": "remained",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [123]
        },
        {
          "name": "viewContainerRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ViewContainerRef",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'viewContainerRef', {read: ViewContainerRef, static: true}"
            }
          ],
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "destroyComponents",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 97,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "displayLowSupplyComponent",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 112,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121, 130]
        },
        {
          "name": "displayLowSupplyIcon",
          "args": [
            {
              "name": "textColor",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 122,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121, 130],
          "jsdoctags": [
            {
              "name": "textColor",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleLowSupply",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 141,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121, 130]
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 130],
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 130]
        },
        {
          "name": "renderLowSupplyText",
          "args": [
            {
              "name": "textColor",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "textColor",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "submitFoodChoice",
          "args": [
            {
              "name": "newQuantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 83,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "newQuantity",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core'\nimport { environment } from 'src/environments/environment'\n\nimport { Choice, OrderedFoodChoice } from '../interfaces'\nimport { isQtyMapCurrentValueObjectLiteral } from './food-choice.type-guard'\n\n@Component({\n  selector: 'app-food-choice',\n  templateUrl: './food-choice.component.html',\n  styleUrls: ['./food-choice.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodChoiceComponent implements OnInit, OnChanges, OnDestroy {\n  // #region Properties (8)\n\n  @Input()\n  public choice: Choice\n  @Output()\n  public foodChoiceAdded = new EventEmitter<OrderedFoodChoice>()\n  @ViewChild('viewContainerRef', { read: ViewContainerRef, static: true })\n  public viewContainerRef: ViewContainerRef\n  @ViewChild('lowSupplyRef', { read: ElementRef, static: true })\n  public lowSupplierRef: ElementRef\n  @Input()\n  public qtyMap: Record<string, number> | undefined | null\n  public remained: number\n  public componentRef: ComponentRef<unknown> | null = null\n  public minimumSupply: number\n\n  // #endregion Properties (8)\n\n  // #region Constructors (1)\n\n  constructor(\n    private factoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n  ) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (4)\n\n  public async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    const { qtyMap } = changes\n    if (isQtyMapCurrentValueObjectLiteral(qtyMap)) {\n      this.remained = qtyMap.currentValue[this.choice.id]\n    } else {\n      this.remained = 0\n    }\n\n    await this.handleLowSupply()\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyComponents()\n  }\n\n  public async ngOnInit(): Promise<void> {\n    this.remained = this.qtyMap ? this.qtyMap[this.choice.id] || 0 : 0\n    this.minimumSupply = Math.ceil(this.remained * environment.lowSupplyPercentage)\n\n    await this.handleLowSupply()\n  }\n\n  public submitFoodChoice(newQuantity: number): void {\n    const { ingredients, quantity, ...rest } = this.choice\n    if (this.remained - newQuantity >= 0) {\n      this.foodChoiceAdded.emit({\n        ...rest,\n        quantity: newQuantity,\n      })\n    }\n  }\n\n  // #endregion Public Methods (4)\n\n  // #region Private Methods (3)\n\n  private destroyComponents() {\n    if (this.componentRef) {\n      this.componentRef.destroy()\n    }\n\n    if (this.viewContainerRef) {\n      this.viewContainerRef.clear()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-unsafe-member-access\n    Array.from(this.lowSupplierRef.nativeElement.children).forEach((child) => {\n      this.renderer.removeChild(this.lowSupplierRef.nativeElement, child)\n    })\n  }\n\n  private async displayLowSupplyComponent() {\n    if (!this.componentRef) {\n      const textColor = 'text-red-500'\n      await this.displayLowSupplyIcon(textColor)\n\n      this.renderLowSupplyText(textColor)\n      this.cdr.detectChanges()\n    }\n  }\n\n  private async displayLowSupplyIcon(textColor: string) {\n    const faExclamationTriangle = (await import('@fortawesome/free-solid-svg-icons')).faExclamationTriangle\n    const FaIconComponent = (await import('@fortawesome/angular-fontawesome')).FaIconComponent\n    const resolvedFaIconComponent = this.factoryResolver.resolveComponentFactory(FaIconComponent)\n    const faIconComponentRef = this.viewContainerRef.createComponent(resolvedFaIconComponent)\n    faIconComponentRef.instance.icon = faExclamationTriangle\n    faIconComponentRef.instance.classes = [textColor, 'text-[1.35rem]', 'mr-2']\n    faIconComponentRef.instance.render()\n    this.componentRef = faIconComponentRef\n  }\n\n  private renderLowSupplyText(textColor: string) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const lowSupplySpanElement = this.renderer.createElement('span') as HTMLSpanElement\n    lowSupplySpanElement.classList.add(textColor, 'text-xl')\n    lowSupplySpanElement.innerText = 'Low Supply'\n    this.renderer.appendChild(this.lowSupplierRef.nativeElement, lowSupplySpanElement)\n  }\n\n  private async handleLowSupply() {\n    if (this.remained <= 0) {\n      this.destroyComponents()\n    } else if (this.remained > 0 && this.remained <= this.minimumSupply) {\n      await this.displayLowSupplyComponent()\n    }\n  }\n\n  // #endregion Private Methods (3)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\n  @apply block;\n}\n\n.food-choice {\n  .row {\n    @apply flex flex-wrap justify-start;\n  }\n\n  .item {\n    flex: 1 1 calc(100% / 4 - 0.75rem * 2 - 0.5rem * 2);\n    @apply px-3 py-2 text-base;\n  }\n}\n",
          "styleUrl": "./food-choice.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "factoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 45,
        "jsdoctags": [
          {
            "name": "factoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnChanges", "OnDestroy"],
      "templateData": "<div class=\"food-choice flex flex-col p-2 box-border-indigo\">\n  <div class=\"row\">\n    <label name=\"name\" class=\"item\">\n      <span class=\"field\">Name:</span>\n      <span class=\"field-text\">{{ choice.name }}</span>\n    </label>\n    <label name=\"description\" class=\"item\">\n      <span class=\"field\">Description:</span>\n      <span class=\"field-text\">{{ choice.description }}</span>\n    </label>\n    <label name=\"price\" class=\"item\">\n      <span class=\"field\">Price:</span>\n      <span class=\"field-text\">{{ choice.currency }} {{ choice.price }}</span>\n    </label>\n    <label name=\"quantity\" class=\"item\">\n      <span class=\"field\">Quantity:</span>\n      <span class=\"field-text\">{{ remained }}</span>\n    </label>\n  </div>\n  <div class=\"row\">\n    <label name=\"ingredient\" class=\"item\">\n      <span class=\"field\">Ingredients:</span>\n      <span class=\"field-text italic\">{{ choice.ingredients }}</span>\n    </label>\n  </div>\n  <div>\n    <ng-container [ngSwitch]=\"remained > 0\">\n      <div class=\"flex\">\n        <app-food-choice-form\n          class=\"mx-3 inline grow\"\n          [choice]=\"choice\"\n          (foodChoiceSubmitted)=\"submitFoodChoice($event)\"\n          *ngSwitchCase=\"true\"\n        >\n        </app-food-choice-form>\n        <div class=\"flex items-center grow\" #lowSupplyRef>\n          <ng-container #viewContainerRef></ng-container>\n        </div>\n      </div>\n\n      <ng-container *ngSwitchDefault>\n        <ng-container *ngTemplateOutlet=\"soldout; context: { choice: choice }\"> </ng-container>\n      </ng-container> \n    </ng-container>\n  </div>\n  <ng-template #soldout let-choice=\"choice\">\n    <span class=\"item text-[#a94442] inline\">Sorry, {{ choice.name }} is sold out</span>\n  </ng-template>\n</div>\n"
    },
    {
      "name": "FoodChoiceFormComponent",
      "id": "component-FoodChoiceFormComponent-74b21f44e339cbd0734d939832583a96",
      "file": "src/app/food/food-choice-form/food-choice-form.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-choice-form",
      "styleUrls": [],
      "styles": [
        "\n      :host {\n        display: block;\n      }\n\n      .ng-invalid:not(form) {\n        border-left: 5px solid #a94442;\n      }\n    "
      ],
      "templateUrl": ["./food-choice-form.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "choice",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "Choice"
        }
      ],
      "outputsClass": [
        {
          "name": "foodChoiceSubmitted",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "componentRef",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ComponentRef<> | null",
          "optional": false,
          "description": "",
          "line": 51
        },
        {
          "name": "form",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [123]
        },
        {
          "name": "processing",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [123]
        },
        {
          "name": "submitChoice$",
          "defaultValue": "new Subject<Event>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53
        },
        {
          "name": "viewContainerRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ViewContainerRef",
          "optional": false,
          "description": "",
          "line": 48,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'viewContainerRef', {read: ViewContainerRef, static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "destroyComponents",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "displaySpinnerIcon",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 121,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121, 130]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 92,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Subject } from 'rxjs'\nimport { delay, map, switchMap, takeUntil, tap } from 'rxjs/operators'\n\nimport { Choice } from '../interfaces'\nimport { FoodService } from '../services'\nimport { fulfillOrderValidator } from '../validators'\nimport { isFormValueQuantity } from './food-choice-form.type-guard'\n\n@Component({\n  selector: 'app-food-choice-form',\n  templateUrl: './food-choice-form.component.html',\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n\n      .ng-invalid:not(form) {\n        border-left: 5px solid #a94442;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodChoiceFormComponent implements OnInit, OnDestroy {\n  // #region Properties (6)\n\n  @Input()\n  public choice: Choice\n  @Output()\n  public foodChoiceSubmitted = new EventEmitter<number>()\n  @ViewChild('viewContainerRef', { read: ViewContainerRef, static: true })\n  viewContainerRef: ViewContainerRef\n  public form: FormGroup\n  public processing = false\n  componentRef: ComponentRef<unknown> | null = null\n  submitChoice$ = new Subject<Event>()\n  unsubscribe$ = new Subject<boolean>()\n\n  // #endregion Properties (6)\n\n  // #region Constructors (1)\n\n  constructor(\n    private fb: FormBuilder,\n    private foodService: FoodService,\n    private factoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Accessors (2)\n\n  public get quantity(): FormControl | undefined {\n    if (!this.form) {\n      return undefined\n    }\n    return this.form.get('quantity') as FormControl\n  }\n\n  public get quantityRemained(): number {\n    return this.foodService.getQuantity(this.choice.id)\n  }\n\n  // #endregion Public Accessors (2)\n\n  // #region Public Methods (2)\n\n  public ngOnDestroy(): void {\n    this.destroyComponents()\n\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.complete()\n  }\n\n  public ngOnInit(): void {\n    this.form = this.fb.group({\n      quantity: new FormControl(1, {\n        validators: [Validators.required, Validators.min(1), fulfillOrderValidator(this.choice.id, this.foodService)],\n        updateOn: 'blur',\n      }),\n    })\n\n    this.submitChoice$\n      .pipe(\n        switchMap(($event) => {\n          $event.preventDefault()\n          $event.stopPropagation()\n          this.processing = true\n          return this.displaySpinnerIcon()\n        }),\n        delay(1000),\n        map(() => (isFormValueQuantity(this.form) ? this.form.value.quantity : 0)),\n        tap(() => {\n          this.destroyComponents()\n          this.processing = false\n        }),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((quantity) => this.foodChoiceSubmitted.emit(quantity))\n  }\n\n  // #endregion Public Methods (2)\n\n  private async displaySpinnerIcon() {\n    const faSpinner = (await import('@fortawesome/free-solid-svg-icons')).faSpinner\n    const FaIconComponent = (await import('@fortawesome/angular-fontawesome')).FaIconComponent\n    const resolvedFaIconComponent = this.factoryResolver.resolveComponentFactory(FaIconComponent)\n    const faIconComponentRef = this.viewContainerRef.createComponent(resolvedFaIconComponent)\n    faIconComponentRef.instance.icon = faSpinner\n    faIconComponentRef.instance.pulse = true\n    faIconComponentRef.instance.render()\n    this.componentRef = faIconComponentRef\n    this.cdr.detectChanges()\n  }\n\n  private destroyComponents() {\n    if (this.componentRef) {\n      this.componentRef.destroy()\n    }\n\n    if (this.viewContainerRef) {\n      this.viewContainerRef.clear()\n    }\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n\n      .ng-invalid:not(form) {\n        border-left: 5px solid #a94442;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "factoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 53,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "factoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "accessors": {
        "quantity": {
          "name": "quantity",
          "getSignature": {
            "name": "quantity",
            "type": "",
            "returnType": "FormControl | undefined",
            "line": 70
          }
        },
        "quantityRemained": {
          "name": "quantityRemained",
          "getSignature": {
            "name": "quantityRemained",
            "type": "number",
            "returnType": "number",
            "line": 77
          }
        }
      },
      "templateData": "<form class=\"py-2 px-0\" [formGroup]=\"form\" (ngSubmit)=\"submitChoice$.next($event)\">\n  <label name=\"quantity\" class=\"item\">\n    <span class=\"field\">Quantity: </span>\n    <input type=\"number\" formControlName=\"quantity\" class=\"mr-2\" [readonly]=\"quantityRemained <= 0\" />\n  </label>\n  <div *ngIf=\"quantity && quantity.invalid && (quantity.touched || quantity.dirty)\" class=\"inline text-[#a94442]\">\n    <div *ngIf=\"quantity.errors?.min\" class=\"inline mr-2\">\n      Quantity must be at least {{ quantity.errors?.min?.min }}.\n    </div>\n    <div *ngIf=\"quantity.errors?.notEnoughQuantity\" class=\"inline mr-2\">\n      Cannot order more than {{ quantity.errors?.notEnoughQuantity.quantityRemained }}.\n    </div>\n  </div>\n  <button\n    type=\"submit\"\n    [disabled]=\"processing || form.invalid || quantityRemained <= 0\"\n    class=\"btn-indigo disabled:opacity-75\"\n    aria-label=\"submit quantity\"\n  >\n    <span class=\"mr-2\">Submit</span>\n    <ng-container #viewContainerRef></ng-container>\n  </button>\n</form>\n"
    },
    {
      "name": "FoodMenuCardComponent",
      "id": "component-FoodMenuCardComponent-a032f38dec59e7acc66b3a680112ae70",
      "file": "src/app/food/food-menu-card/food-menu-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-menu-card",
      "styleUrls": [],
      "styles": [],
      "template": "<div>   <ng-content select=\"[head]\"></ng-content>\n   <ng-content select=\"[body]\"></ng-content>\n </div>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-food-menu-card',\n  template: ` <div>\n    <ng-content select=\"[head]\"></ng-content>\n    <ng-content select=\"[body]\"></ng-content>\n  </div>`,\n})\nexport class FoodMenuCardComponent {}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "FoodMenuComponent",
      "id": "component-FoodMenuComponent-f44fdc94b165d4466c22fb46afd4026b",
      "file": "src/app/food/food-menu/food-menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-menu",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./food-menu.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "addDynamicFoodChoice",
          "defaultValue": "new EventEmitter<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "handleFoodChoiceSub$",
          "defaultValue": "new Subject<OrderedFoodChoice>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "menuItems$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<[] | undefined>",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "menuOptionSub$",
          "defaultValue": "new BehaviorSubject<string>(MenuOptions.all)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "qtyMap",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | number> | undefined",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [123]
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "methodsClass": [
        {
          "name": "choiceTrackByFn",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "choice",
              "type": "Choice",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string | number",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "choice",
              "type": "Choice",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "filterMenuItems",
          "args": [
            {
              "name": "menuItems",
              "type": "MenuItem[] | undefined",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "[] | undefined",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "menuItems",
              "type": "MenuItem[] | undefined",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "menuItemTrackByFn",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "menuItem",
              "type": "MenuItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string | number",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "menuItem",
              "type": "MenuItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core'\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs'\nimport { map, takeUntil, tap } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\n\nimport { MenuOptions } from '../enums'\nimport { Choice, MenuItem, OrderedFoodChoice } from '../interfaces'\nimport { FoodService } from '../services'\n\n@Component({\n  selector: 'app-food-menu',\n  templateUrl: './food-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodMenuComponent implements OnInit, OnDestroy {\n  // #region Properties (6)\n\n  @Output()\n  public addDynamicFoodChoice = new EventEmitter<OrderedFoodChoice>()\n  handleFoodChoiceSub$ = new Subject<OrderedFoodChoice>()\n  menuItems$: Observable<MenuItem[] | undefined>\n  menuOptionSub$ = new BehaviorSubject<string>(MenuOptions.all)\n  public qtyMap: Record<string, number> | undefined\n  unsubscribe$ = new Subject<boolean>()\n\n  // #endregion Properties (6)\n\n  // #region Constructors (1)\n\n  constructor(private service: FoodService) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (5)\n\n  public choiceTrackByFn(index: number, choice: Choice): string | number {\n    return choice ? choice.id : index\n  }\n\n  public filterMenuItems(menuItems: MenuItem[] | undefined, option: string): MenuItem[] | undefined {\n    if (!menuItems || option === 'all') {\n      return menuItems\n    }\n\n    const typedOptionString = option as keyof typeof MenuOptions\n    const typedOption = MenuOptions[typedOptionString]\n\n    const filterFuncMap = {\n      [MenuOptions.all]: () => true,\n      [MenuOptions.available]: (choice: Choice) => this.qtyMap && this.qtyMap[choice.id] > 0,\n      [MenuOptions.soldOut]: (choice: Choice) => this.qtyMap && this.qtyMap[choice.id] <= 0,\n    }\n\n    const filterFunc = filterFuncMap[typedOption]\n    return menuItems.reduce((acc, menuItem) => {\n      const matchedChoices = menuItem.choices.filter(filterFunc)\n      if (matchedChoices.length > 0) {\n        return acc.concat({\n          ...menuItem,\n          choices: matchedChoices,\n        })\n      }\n      return acc\n    }, [] as MenuItem[])\n  }\n\n  public menuItemTrackByFn(index: number, menuItem: MenuItem): string | number {\n    return menuItem ? menuItem.id : index\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.unsubscribe()\n  }\n\n  public ngOnInit(): void {\n    const menuUrl = `${environment.baseUrl}/menu`\n\n    this.menuItems$ = combineLatest([\n      this.service.getFood(menuUrl),\n      this.menuOptionSub$,\n      this.service.quantityAvailableMap$,\n    ]).pipe(\n      map(([menuItems, option]) => ({\n        menuItems,\n        option,\n      })),\n      map(({ menuItems, option }) => this.filterMenuItems(menuItems, option)),\n      takeUntil(this.unsubscribe$),\n    )\n\n    this.service.quantityAvailableMap$.pipe(takeUntil(this.unsubscribe$)).subscribe((updatedQtyMap) => {\n      if (!updatedQtyMap) {\n        this.qtyMap = undefined\n      } else {\n        this.qtyMap = {\n          ...updatedQtyMap,\n        }\n      }\n    })\n\n    this.handleFoodChoiceSub$\n      .pipe(\n        tap(({ id, quantity }) => this.service.updateQuantity(id, quantity)),\n        takeUntil(this.unsubscribe$),\n      )\n      .subscribe((choice) => this.addDynamicFoodChoice.emit(choice))\n  }\n\n  // #endregion Public Methods (5)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "service",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "service",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"],
      "templateData": "<div class=\"food-menu\" *ngIf=\"menuItems$ | async as menuItems; else notAvailable\">\n  <app-food-menu-option (menuOptionSelected)=\"menuOptionSub$.next($event)\"></app-food-menu-option>\n  <app-food-menu-card *ngFor=\"let menuItem of menuItems; index as i; trackBy: menuItemTrackByFn\">\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice\n        [choice]=\"choice\"\n        [qtyMap]=\"qtyMap\"\n        (foodChoiceAdded)=\"handleFoodChoiceSub$.next($event)\"\n      ></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>\n</div>\n<ng-template #notAvailable>No menu</ng-template>\n"
    },
    {
      "name": "FoodMenuOptionsComponent",
      "id": "component-FoodMenuOptionsComponent-8302ec29432ae98975733c5afaf74c36",
      "file": "src/app/food/food-menu-options/food-menu-options.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-menu-option",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<section class=\"flex justify-end p-3 pr-0\" aria-label=\"select food section\">\n  <form [formGroup]=\"form\" aria-label=\"select food form\">\n    <select class=\"pl-2 w-[200px] text-base\" name=\"option\" formControlName=\"option\" aria-label=\"select food\">\n      <option value=\"all\" aria-label=\"show all\">Show all</option>\n      <option value=\"available\" aria-label=\"show available\">Show available only</option>\n      <option value=\"soldOut\" aria-label=\"show sold out\">Show sold out</option>\n    </select>\n  </form>\n</section>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "menuOptionSelected",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "form",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [123]
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms'\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\n\nimport { MenuOptions } from '../enums'\n\n@Component({\n  selector: 'app-food-menu-option',\n  template: `\n    <section class=\"flex justify-end p-3 pr-0\" aria-label=\"select food section\">\n      <form [formGroup]=\"form\" aria-label=\"select food form\">\n        <select class=\"pl-2 w-[200px] text-base\" name=\"option\" formControlName=\"option\" aria-label=\"select food\">\n          <option value=\"all\" aria-label=\"show all\">Show all</option>\n          <option value=\"available\" aria-label=\"show available\">Show available only</option>\n          <option value=\"soldOut\" aria-label=\"show sold out\">Show sold out</option>\n        </select>\n      </form>\n    </section>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodMenuOptionsComponent implements OnInit, OnDestroy {\n  // #region Properties (3)\n\n  @Output()\n  public menuOptionSelected = new EventEmitter<string>()\n\n  public form: FormGroup\n  unsubscribe$ = new Subject<boolean>()\n\n  // #endregion Properties (3)\n\n  // #region Constructors (1)\n\n  constructor(private fb: FormBuilder) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (2)\n\n  public ngOnDestroy(): void {\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.complete()\n  }\n\n  public ngOnInit(): void {\n    this.form = this.fb.group({\n      option: new FormControl(MenuOptions.all),\n    })\n\n    this.form.controls['option'].valueChanges\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe((value: string) => this.menuOptionSelected.emit(value))\n  }\n\n  // #endregion Public Methods (2)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 37,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"]
    },
    {
      "name": "FoodQuestionComponent",
      "id": "component-FoodQuestionComponent-d40d853baa36f5659bbdd04180968a5d",
      "file": "src/app/food/food-question/food-question.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-question",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<div class=\"food-question flex flex-col border-2 border-indigo-400\">\n  <label name=\"question\" class=\"item flex px-2 py-3\">\n    <span class=\"field\">Question:</span>\n    <span class=\"flex-auto field-text\">{{ question }}</span>\n  </label>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "question",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core'\n\n@Component({\n  selector: 'app-food-question',\n  // templateUrl: './food-question.component.html',\n  template: `\n    <div class=\"food-question flex flex-col border-2 border-indigo-400\">\n      <label name=\"question\" class=\"item flex px-2 py-3\">\n        <span class=\"field\">Question:</span>\n        <span class=\"flex-auto field-text\">{{ question }}</span>\n      </label>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodQuestionComponent {\n  // #region Properties (1)\n\n  @Input()\n  public question: string\n\n  // #endregion Properties (1)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n"
    },
    {
      "name": "FoodShellComponent",
      "id": "component-FoodShellComponent-9274aee19801b756dfd7da15d91a66fb",
      "file": "src/app/food/food-shell/food-shell.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-shell",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<div class=\"p-[1.125rem]\">\n  <p class=\"text-center text-2xl text-indigo-500 underline\">Angular Nation Spanish Food Menu</p>\n  <app-food-menu class=\"block mb-2\" (addDynamicFoodChoice)=\"addDynamicFoodChoice($event)\"></app-food-menu>\n  <p>Your order</p>\n  <section class=\"flex flex-wrap items-stretch p-2 mb-1\">\n    <ng-container #viewContainerRef></ng-container>\n  </section>\n  <ng-container *ngIf=\"tips$ | async as tips\">\n    <app-food-total\n      [isFoodOrdered]=\"orderedFood && orderedFood.length > 0\"\n      [currency]=\"orderedFood?.[0]?.currency || ''\"\n      [tips]=\"tips\"\n      [totalBreakdown]=\"totalBreakdown\"\n      (getCheck)=\"calculate($event)\"\n    ></app-food-total>\n  </ng-container>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "componentRefs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ComponentRef<FoodCardComponent>[]",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [123]
        },
        {
          "name": "orderedFood",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OrderedFoodChoice[]",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [123]
        },
        {
          "name": "orderedViewContainer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ViewContainerRef",
          "optional": false,
          "description": "",
          "line": 54,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'viewContainerRef', {read: ViewContainerRef, static: true}"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "tips$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<number[]>",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "totalBreakdown",
          "defaultValue": "{\n    subTotal: 0,\n    totalTip: 0,\n    total: 0,\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TotalCost",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [123]
        },
        {
          "name": "unsubscribe$",
          "defaultValue": "new Subject<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        }
      ],
      "methodsClass": [
        {
          "name": "addDynamicFoodChoice",
          "args": [
            {
              "name": "choice",
              "type": "OrderedFoodChoice",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Promise<void>",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 130],
          "jsdoctags": [
            {
              "name": "choice",
              "type": "OrderedFoodChoice",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "calculate",
          "args": [
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "tip",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "destroyComponents",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 106,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 112,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core'\nimport { Observable, Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators'\nimport { environment } from 'src/environments/environment'\n\nimport { FoodCardComponent } from '../food-card'\nimport { OrderedFoodChoice, TotalCost } from '../interfaces'\nimport { FoodService } from '../services'\n\n@Component({\n  selector: 'app-food-shell',\n  template: `\n    <div class=\"p-[1.125rem]\">\n      <p class=\"text-center text-2xl text-indigo-500 underline\">Angular Nation Spanish Food Menu</p>\n      <app-food-menu class=\"block mb-2\" (addDynamicFoodChoice)=\"addDynamicFoodChoice($event)\"></app-food-menu>\n      <p>Your order</p>\n      <section class=\"flex flex-wrap items-stretch p-2 mb-1\">\n        <ng-container #viewContainerRef></ng-container>\n      </section>\n      <ng-container *ngIf=\"tips$ | async as tips\">\n        <app-food-total\n          [isFoodOrdered]=\"orderedFood && orderedFood.length > 0\"\n          [currency]=\"orderedFood?.[0]?.currency || ''\"\n          [tips]=\"tips\"\n          [totalBreakdown]=\"totalBreakdown\"\n          (getCheck)=\"calculate($event)\"\n        ></app-food-total>\n      </ng-container>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FoodShellComponent implements OnInit, OnDestroy {\n  // #region Properties (6)\n\n  @ViewChild('viewContainerRef', { read: ViewContainerRef, static: true })\n  public orderedViewContainer: ViewContainerRef\n\n  public componentRefs: ComponentRef<FoodCardComponent>[] = []\n  public orderedFood: OrderedFoodChoice[] = []\n  tips$: Observable<number[]>\n\n  public totalBreakdown: TotalCost = {\n    subTotal: 0,\n    totalTip: 0,\n    total: 0,\n  }\n\n  unsubscribe$ = new Subject<boolean>()\n\n  // #endregion Properties (6)\n\n  // #region Constructors (1)\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private foodService: FoodService,\n    private cdr: ChangeDetectorRef,\n  ) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Methods (4)\n\n  public async addDynamicFoodChoice(choice: OrderedFoodChoice): Promise<void> {\n    const lazyComponent = await import('../food-card/food-card.component')\n    const resolvedComponent = this.componentFactoryResolver.resolveComponentFactory(lazyComponent.FoodCardComponent)\n    const componentRef = this.orderedViewContainer.createComponent(resolvedComponent)\n    const { total } = this.foodService.calculateTotal([choice])\n\n    componentRef.instance.ordered = {\n      ...choice,\n    }\n\n    componentRef.instance.total = total\n    this.componentRefs.push(componentRef)\n\n    this.orderedFood = [...this.orderedFood, choice]\n    this.cdr.detectChanges()\n  }\n\n  public calculate(tip: number): void {\n    const newTotal = this.foodService.calculateTotal(this.orderedFood, tip)\n    this.totalBreakdown = {\n      ...newTotal,\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.destroyComponents()\n    this.unsubscribe$.next(true)\n    this.unsubscribe$.complete()\n  }\n\n  public ngOnInit(): void {\n    const tipUrl = `${environment.baseUrl}/tips`\n    this.tips$ = this.foodService.getTips(tipUrl).pipe(takeUntil(this.unsubscribe$))\n  }\n\n  // #endregion Public Methods (4)\n\n  // #region Private Methods (1)\n\n  private destroyComponents() {\n    for (const componentRef of this.componentRefs) {\n      componentRef.destroy()\n    }\n    if (this.orderedViewContainer) {\n      this.orderedViewContainer.clear()\n    }\n  }\n\n  // #endregion Private Methods (1)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 66,
        "jsdoctags": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy"]
    },
    {
      "name": "FoodTotalComponent",
      "id": "component-FoodTotalComponent-d983f8d2b06b4bfd6b5201799d3198a6",
      "file": "src/app/food/food-total/food-total.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-food-total",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: block;\n      }\n    "],
      "template": "<div class=\"flex flex-col p-2 box-border-indigo\">\n  <div class=\"selection\">\n    <button\n      class=\"btn-indigo mr-2 mb-2 disabled:opacity-75\"\n      [disabled]=\"!isFoodOrdered\"\n      (click)=\"getCheck.emit(this.tip)\"\n      arial-label=\"calculate total\"\n    >\n      Give me the check\n    </button>\n    <p class=\"inline mr-2\">Currency: {{ currency || '' }}</p>\n    <form class=\"inline\" [formGroup]=\"form\">\n      <label for=\"tips\">Tip:</label>\n      <select id=\"tips\" class=\"pl-2 pr-8 py-1\" formControlName=\"tip\" arial-label=\"percentage of tip dropdown\">\n        <option *ngFor=\"let tip of tips\" [value]=\"tip\" [attr.arial-label]=\"tip + '%'\">{{ tip }}%</option>\n      </select>\n    </form>\n  </div>\n  <section class=\"total-section\" arial-label=\"total section\">\n    <p class=\"inline mr-2\" arial-label=\"subtotal\">Subtotal: {{ totalBreakdown.subTotal }}</p>\n    <p class=\"inline mr-2\" arial-label=\"tip\">Tip: {{ totalBreakdown.totalTip }}</p>\n    <p class=\"inline mr-2 font-bold\" arial-label=\"total amount of the order\">Total: {{ totalBreakdown.total }}</p>\n  </section>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "isFoodOrdered",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "boolean"
        },
        {
          "name": "tips",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "number[]"
        },
        {
          "name": "totalBreakdown",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "TotalCost"
        }
      ],
      "outputsClass": [
        {
          "name": "getCheck",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "form",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\n\nimport { TotalCost } from '../interfaces'\n\n@Component({\n  selector: 'app-food-total',\n  template: `\n    <div class=\"flex flex-col p-2 box-border-indigo\">\n      <div class=\"selection\">\n        <button\n          class=\"btn-indigo mr-2 mb-2 disabled:opacity-75\"\n          [disabled]=\"!isFoodOrdered\"\n          (click)=\"getCheck.emit(this.tip)\"\n          arial-label=\"calculate total\"\n        >\n          Give me the check\n        </button>\n        <p class=\"inline mr-2\">Currency: {{ currency || '' }}</p>\n        <form class=\"inline\" [formGroup]=\"form\">\n          <label for=\"tips\">Tip:</label>\n          <select id=\"tips\" class=\"pl-2 pr-8 py-1\" formControlName=\"tip\" arial-label=\"percentage of tip dropdown\">\n            <option *ngFor=\"let tip of tips\" [value]=\"tip\" [attr.arial-label]=\"tip + '%'\">{{ tip }}%</option>\n          </select>\n        </form>\n      </div>\n      <section class=\"total-section\" arial-label=\"total section\">\n        <p class=\"inline mr-2\" arial-label=\"subtotal\">Subtotal: {{ totalBreakdown.subTotal }}</p>\n        <p class=\"inline mr-2\" arial-label=\"tip\">Tip: {{ totalBreakdown.totalTip }}</p>\n        <p class=\"inline mr-2 font-bold\" arial-label=\"total amount of the order\">Total: {{ totalBreakdown.total }}</p>\n      </section>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class FoodTotalComponent implements OnInit {\n  // #region Properties (6)\n\n  @Input()\n  public currency: string\n  @Output()\n  public getCheck = new EventEmitter<number>()\n  @Input()\n  public isFoodOrdered: boolean\n  @Input()\n  public tips: number[]\n  @Input()\n  public totalBreakdown: TotalCost\n\n  public form: FormGroup\n\n  // #endregion Properties (6)\n\n  // #region Constructors (1)\n\n  constructor(private fb: FormBuilder) {}\n\n  // #endregion Constructors (1)\n\n  // #region Public Accessors (1)\n\n  public get tip(): number {\n    const cents = 100\n    const control = this.form.get('tip') as FormControl\n    if (!control) {\n      return 0\n    }\n\n    return (control.value as number) / cents\n  }\n\n  // #endregion Public Accessors (1)\n\n  // #region Public Methods (1)\n\n  public ngOnInit(): void {\n    this.form = this.fb.group({\n      tip: new FormControl(this.tips[0], { validators: [Validators.required] }),\n    })\n  }\n\n  // #endregion Public Methods (1)\n}\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: block;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 56,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "tip": {
          "name": "tip",
          "getSignature": {
            "name": "tip",
            "type": "number",
            "returnType": "number",
            "line": 68
          }
        }
      }
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "id": "module-AppModule-3b6b71dee5182dd2b0f81203cd65e5e1",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app.module.ts",
      "methods": [],
      "sourceCode": "import { HttpClientModule } from '@angular/common/http'\nimport { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppComponent } from './app.component'\nimport { AppRoutingModule } from './app-routing.module'\nimport { FoodModule } from './food'\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, AppRoutingModule, FoodModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AppRoutingModule"
            },
            {
              "name": "FoodModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AppRoutingModule",
      "id": "module-AppRoutingModule-3ed2f11f86fd8eb5069bac810c153493",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/app-routing.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nconst routes: Routes = [\n  {\n    path: 'food',\n    loadChildren: () => \"import('./food/food.module').then((m) => m.FoodModule)\",\n  },\n  {\n    path: '',\n    redirectTo: 'food',\n    pathMatch: 'full',\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodCardModule",
      "id": "module-FoodCardModule-c18d3ca3c5c9d5cc8cf8de578dba6924",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-card/food-card.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodCardComponent } from './food-card.component'\n\n@NgModule({\n  declarations: [FoodCardComponent],\n  imports: [CommonModule],\n  exports: [FoodCardComponent],\n})\nexport class FoodCardModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodCardComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodCardComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodChoiceFormModule",
      "id": "module-FoodChoiceFormModule-6d78372c4ca4b0214d3141c868df2463",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-choice-form/food-choice-form.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { FoodChoiceFormComponent } from './food-choice-form.component'\n\n@NgModule({\n  declarations: [FoodChoiceFormComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  exports: [FoodChoiceFormComponent],\n})\nexport class FoodChoiceFormModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodChoiceFormComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodChoiceFormComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodChoiceModule",
      "id": "module-FoodChoiceModule-7e7cade862eb01cc30c6382e7d556ed6",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-choice/food-choice.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodChoiceFormModule } from '../food-choice-form'\nimport { FoodChoiceComponent } from './food-choice.component'\n\n@NgModule({\n  declarations: [FoodChoiceComponent],\n  imports: [CommonModule, FoodChoiceFormModule],\n  exports: [FoodChoiceComponent],\n})\nexport class FoodChoiceModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodChoiceComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FoodChoiceFormModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodChoiceComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodMenuCardModule",
      "id": "module-FoodMenuCardModule-f984dca8fada0938f6789e98a7afbbf1",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-menu-card/food-menu-card.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodMenuCardComponent } from './food-menu-card.component'\n\n@NgModule({\n  declarations: [FoodMenuCardComponent],\n  imports: [CommonModule],\n  exports: [FoodMenuCardComponent],\n})\nexport class FoodMenuCardModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodMenuCardComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodMenuCardComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodMenuModule",
      "id": "module-FoodMenuModule-0c3fe3824d4cb64f71618c2d0203e5f0",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-menu/food-menu.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodChoiceModule } from '../food-choice'\nimport { FoodMenuCardModule } from '../food-menu-card'\nimport { FoodMenuOptionsModule } from '../food-menu-options'\nimport { FoodQuestionModule } from '../food-question'\nimport { FoodMenuComponent } from './food-menu.component'\n\n@NgModule({\n  declarations: [FoodMenuComponent],\n  imports: [CommonModule, FoodQuestionModule, FoodMenuCardModule, FoodMenuOptionsModule, FoodChoiceModule],\n  exports: [FoodMenuComponent],\n})\nexport class FoodMenuModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodMenuComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FoodChoiceModule"
            },
            {
              "name": "FoodMenuCardModule"
            },
            {
              "name": "FoodMenuOptionsModule"
            },
            {
              "name": "FoodQuestionModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodMenuComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodMenuOptionsModule",
      "id": "module-FoodMenuOptionsModule-bac01f2b59c2bd81cba79d5b3a84c71a",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-menu-options/food-menu-options.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { FoodMenuOptionsComponent } from './food-menu-options.component'\n\n@NgModule({\n  declarations: [FoodMenuOptionsComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  exports: [FoodMenuOptionsComponent],\n})\nexport class FoodMenuOptionsModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodMenuOptionsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodMenuOptionsComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodModule",
      "id": "module-FoodModule-0d4266819f356e690e5c613a9baf30bf",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodRoutingModule } from './food-routing.module'\nimport { FoodShellModule } from './food-shell'\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, FoodRoutingModule, FoodShellModule],\n})\nexport class FoodModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FoodRoutingModule"
            },
            {
              "name": "FoodShellModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodQuestionModule",
      "id": "module-FoodQuestionModule-149db26327d178c1b246a2eb2fc3ec33",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-question/food-question.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodQuestionComponent } from './food-question.component'\n\n@NgModule({\n  declarations: [FoodQuestionComponent],\n  imports: [CommonModule],\n  exports: [FoodQuestionComponent],\n})\nexport class FoodQuestionModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodQuestionComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodQuestionComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodRoutingModule",
      "id": "module-FoodRoutingModule-00c33746945bdd15d0dd87f4c7cfaaf5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-routing.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { FoodShellComponent } from './food-shell'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodShellComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FoodRoutingModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodShellModule",
      "id": "module-FoodShellModule-27ebcafac35e2b25fbf551b8bb1564dc",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-shell/food-shell.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\n\nimport { FoodMenuModule } from '../food-menu'\nimport { FoodTotalModule } from '../food-total'\nimport { FoodShellComponent } from './food-shell.component'\n\n@NgModule({\n  declarations: [FoodShellComponent],\n  imports: [CommonModule, FoodTotalModule, FoodMenuModule],\n  exports: [FoodShellComponent],\n})\nexport class FoodShellModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodShellComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "FoodMenuModule"
            },
            {
              "name": "FoodTotalModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodShellComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "FoodTotalModule",
      "id": "module-FoodTotalModule-5e267cc1f2b028af231e8ce7a303ac31",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "src/app/food/food-total/food-total.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { FoodTotalComponent } from './food-total.component'\n\n@NgModule({\n  declarations: [FoodTotalComponent],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  exports: [FoodTotalComponent],\n})\nexport class FoodTotalModule {}\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "FoodTotalComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "FoodTotalComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "CORS_HEADERS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/tips.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n  'Access-Control-Allow-Methods': 'OPTIONS, GET',\n  'Content-Type': 'application/json',\n}"
      },
      {
        "name": "CORS_HEADERS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n  'Access-Control-Allow-Methods': 'OPTIONS, GET',\n  'Content-Type': 'application/json',\n}"
      },
      {
        "name": "data",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n      ],\n    },\n  ],\n}"
      },
      {
        "name": "DisableSubmit",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Empty",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  baseUrl: 'https://mystifying-panini-99633b.netlify.app/.netlify/functions',\n  lowSupplyPercentage: 0.4,\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  baseUrl: '/.netlify/functions',\n  lowSupplyPercentage: 0.4,\n}"
      },
      {
        "name": "FoodMenuCardTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodMenuCardComponent>",
        "defaultValue": "(args: FoodMenuCardComponent) => ({\n  props: {\n    ...args,\n    foodChoiceAdded: action('foodChoiceAdded'),\n  },\n  template: `<app-food-menu-card>\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice [choice]=\"choice\" [qtyMap]=\"qtyMap\" (foodChoiceAdded)=\"foodChoiceAdded($event)\"></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>`,\n})"
      },
      {
        "name": "FoodMenuOptionsTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-options/food-menu-options.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodMenuOptionsComponent>",
        "defaultValue": "(args: FoodMenuOptionsComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "handler",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/tips.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Handler",
        "defaultValue": "async (event) => {\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers: CORS_HEADERS,\n    }\n  }\n\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: CORS_HEADERS,\n      body: JSON.stringify({\n        tips: [0, 5, 7.5, 10, 12.5, 15, 20],\n      }),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
      },
      {
        "name": "handler",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/assets/functions/menu.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Handler",
        "defaultValue": "async (event) => {\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers: CORS_HEADERS,\n    }\n  }\n\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: CORS_HEADERS,\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
      },
      {
        "name": "LongDescription",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LongQuestion",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LowSupply",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LowSupplyMockData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/storybook-mock/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 1,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
      },
      {
        "name": "Menu",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MockData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/storybook-mock/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
      },
      {
        "name": "NoOrder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FoodMenuCardTemplate.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-options/food-menu-options.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FoodMenuOptionsTemplate.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-shell/food-shell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "qtyMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n  [LowSupplyMockData[0].choices[2].id]: 1,\n}"
      },
      {
        "name": "qtyMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "literal type"
      },
      {
        "name": "SimpleQuestion",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SoldOut",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SoldOut",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FoodMenuCardTemplate.bind({})"
      },
      {
        "name": "SoldOutMenu",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SoldOutMockData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/storybook-mock/constants.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodChoiceFormComponent>",
        "defaultValue": "(args: FoodChoiceFormComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-choice/food-choice.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodChoiceComponent>",
        "defaultValue": "(args: FoodChoiceComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-card/food-card.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodCardComponent>",
        "defaultValue": "(args: FoodCardComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-menu/food-menu.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodMenuComponent>",
        "defaultValue": "(args: FoodMenuComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-question/food-question.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodQuestionComponent>",
        "defaultValue": "(args: FoodQuestionComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-shell/food-shell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodShellComponent>",
        "defaultValue": "(args: FoodShellComponent) => ({\n  props: args,\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/food/food-total/food-total.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<FoodTotalComponent>",
        "defaultValue": "(args: FoodTotalComponent) => ({\n  props: {\n    ...args,\n    getCheck: action('getCheck'),\n  },\n})"
      }
    ],
    "functions": [
      {
        "name": "fulfillOrderValidator",
        "file": "src/app/food/validators/fulfill-order-validator.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "choiceId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "ValidatorFn",
        "jsdoctags": [
          {
            "name": "choiceId",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "foodService",
            "type": "FoodService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "isFormControl",
        "file": "src/app/food/validators/fulfill-order-validator.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "formValue",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "number",
        "jsdoctags": [
          {
            "name": "formValue",
            "type": "any",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "isFormValueQuantity",
        "file": "src/app/food/food-choice-form/food-choice-form.type-guard.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "formGroup",
            "type": "FormGroup",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "FormValueQuantity",
        "jsdoctags": [
          {
            "name": "formGroup",
            "type": "FormGroup",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "isQtyMapCurrentValueObjectLiteral",
        "file": "src/app/food/food-choice/food-choice.type-guard.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "qtyMap",
            "type": "SimpleChange",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "SimpleChangeQuantityMap",
        "jsdoctags": [
          {
            "name": "qtyMap",
            "type": "SimpleChange",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [],
    "enumerations": [
      {
        "name": "MenuOptions",
        "childs": [
          {
            "name": "all",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "all"
          },
          {
            "name": "available",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "available"
          },
          {
            "name": "soldOut",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "soldOut"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "src/app/food/enums/menu-option.enum.ts"
      }
    ],
    "groupedVariables": {
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type"
        }
      ],
      "src/assets/functions/tips.ts": [
        {
          "name": "CORS_HEADERS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/tips.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n  'Access-Control-Allow-Methods': 'OPTIONS, GET',\n  'Content-Type': 'application/json',\n}"
        },
        {
          "name": "handler",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/tips.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Handler",
          "defaultValue": "async (event) => {\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers: CORS_HEADERS,\n    }\n  }\n\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: CORS_HEADERS,\n      body: JSON.stringify({\n        tips: [0, 5, 7.5, 10, 12.5, 15, 20],\n      }),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
        }
      ],
      "src/assets/functions/menu.ts": [
        {
          "name": "CORS_HEADERS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n  'Access-Control-Allow-Methods': 'OPTIONS, GET',\n  'Content-Type': 'application/json',\n}"
        },
        {
          "name": "data",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  menu: [\n    {\n      id: '1',\n      question: 'Which appetizer(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b',\n          name: 'Tomato salad',\n          description: 'Tomato salad',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 25,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'd',\n          name: 'Buffalo Chicken Wings',\n          description: 'Spicy chicken wings',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 30,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'e',\n          name: 'Siu Mei',\n          description: 'Chinese Dimsum',\n          currency: 'USD',\n          price: 3.99,\n          available: true,\n          quantity: 10,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n      ],\n    },\n    {\n      id: '2',\n      question: 'Which dessert(s) do you wish to order?',\n      choices: [\n        {\n          id: 'b1',\n          name: 'Tiramisu',\n          description: 'Coffee Flavoured Dessert from Italy',\n          currency: 'USD',\n          price: 5.99,\n          available: true,\n          quantity: 30,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'c1',\n          name: 'Gulab Jamun',\n          description: 'Deep-fried sweets from India',\n          currency: 'USD',\n          price: 4.99,\n          available: true,\n          quantity: 35,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n        {\n          id: 'd1',\n          name: 'Lamingtons',\n          description: 'square sponge cakes from Australia',\n          currency: 'USD',\n          price: 6.99,\n          available: true,\n          quantity: 40,\n          ingredients:\n            'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n        },\n      ],\n    },\n  ],\n}"
        },
        {
          "name": "handler",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/assets/functions/menu.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Handler",
          "defaultValue": "async (event) => {\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 204,\n      headers: CORS_HEADERS,\n    }\n  }\n\n  if (event.httpMethod === 'GET') {\n    return {\n      statusCode: 200,\n      headers: CORS_HEADERS,\n      body: JSON.stringify(data),\n    }\n  }\n\n  return {\n    statusCode: 500,\n    body: `Unsupported http method: ${event.httpMethod}`,\n  }\n}"
        }
      ],
      "src/app/food/food-choice-form/food-choice-form.stories.ts": [
        {
          "name": "DisableSubmit",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice-form/food-choice-form.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodChoiceFormComponent>",
          "defaultValue": "(args: FoodChoiceFormComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-menu/food-menu.stories.ts": [
        {
          "name": "Empty",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Menu",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SoldOutMenu",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu/food-menu.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodMenuComponent>",
          "defaultValue": "(args: FoodMenuComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  baseUrl: 'https://mystifying-panini-99633b.netlify.app/.netlify/functions',\n  lowSupplyPercentage: 0.4,\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  baseUrl: '/.netlify/functions',\n  lowSupplyPercentage: 0.4,\n}"
        }
      ],
      "src/app/food/food-menu-card/food-menu-card.stories.ts": [
        {
          "name": "FoodMenuCardTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodMenuCardComponent>",
          "defaultValue": "(args: FoodMenuCardComponent) => ({\n  props: {\n    ...args,\n    foodChoiceAdded: action('foodChoiceAdded'),\n  },\n  template: `<app-food-menu-card>\n    <app-food-question [question]=\"menuItem.question\" head></app-food-question>\n    <ng-container *ngFor=\"let choice of menuItem.choices; index as j; trackBy: choiceTrackByFn\" body>\n      <app-food-choice [choice]=\"choice\" [qtyMap]=\"qtyMap\" (foodChoiceAdded)=\"foodChoiceAdded($event)\"></app-food-choice>\n    </ng-container>\n  </app-food-menu-card>`,\n})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FoodMenuCardTemplate.bind({})"
        },
        {
          "name": "qtyMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n}"
        },
        {
          "name": "SoldOut",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-card/food-menu-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FoodMenuCardTemplate.bind({})"
        }
      ],
      "src/app/food/food-menu-options/food-menu-options.stories.ts": [
        {
          "name": "FoodMenuOptionsTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-options/food-menu-options.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodMenuOptionsComponent>",
          "defaultValue": "(args: FoodMenuOptionsComponent) => ({\n  props: args,\n})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-menu-options/food-menu-options.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FoodMenuOptionsTemplate.bind({})"
        }
      ],
      "src/app/food/food-card/food-card.stories.ts": [
        {
          "name": "LongDescription",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-card/food-card.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodCardComponent>",
          "defaultValue": "(args: FoodCardComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-question/food-question.stories.ts": [
        {
          "name": "LongQuestion",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleQuestion",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-question/food-question.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodQuestionComponent>",
          "defaultValue": "(args: FoodQuestionComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/food-choice/food-choice.stories.ts": [
        {
          "name": "LowSupply",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "qtyMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\n  [MockData[0].choices[0].id]: 10,\n  [SoldOutMockData[0].choices[1].id]: 0,\n  [LowSupplyMockData[0].choices[2].id]: 1,\n}"
        },
        {
          "name": "SoldOut",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-choice/food-choice.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodChoiceComponent>",
          "defaultValue": "(args: FoodChoiceComponent) => ({\n  props: args,\n})"
        }
      ],
      "src/app/food/storybook-mock/constants.ts": [
        {
          "name": "LowSupplyMockData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/storybook-mock/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 1,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
        },
        {
          "name": "MockData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/storybook-mock/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 10,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
        },
        {
          "name": "SoldOutMockData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/storybook-mock/constants.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\n  {\n    id: '1',\n    question: 'Which appetizer(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a',\n        name: 'Egg salad',\n        description: 'Egg salad',\n        currency: 'USD',\n        price: 4.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'd',\n        name: 'Buffalo Chicken Wings',\n        description: 'Spicy chicken wings',\n        currency: 'USD',\n        price: 8.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b',\n        name: 'Oven Baked Zucchini Chips',\n        description: 'Oven Baked Zucchini Chips',\n        currency: 'USD',\n        price: 5.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n  {\n    id: '2',\n    question: 'Which dessert(s) do you wish to order?',\n    choices: [\n      {\n        id: 'a1',\n        name: 'Ice cream',\n        description: 'Ice cream',\n        currency: 'USD',\n        price: 1.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n      {\n        id: 'b1',\n        name: 'Tiramisu',\n        description: 'Coffee Flavoured Dessert from Italy',\n        currency: 'USD',\n        price: 2.99,\n        quantity: 0,\n        ingredients:\n          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce efficitur dui in sapien posuere, eu condimentum urna fringilla. Donec cursus.',\n      },\n    ],\n  },\n]"
        }
      ],
      "src/app/food/food-total/food-total.stories.ts": [
        {
          "name": "NoOrder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-total/food-total.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodTotalComponent>",
          "defaultValue": "(args: FoodTotalComponent) => ({\n  props: {\n    ...args,\n    getCheck: action('getCheck'),\n  },\n})"
        }
      ],
      "src/app/food/food-shell/food-shell.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-shell/food-shell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/food/food-shell/food-shell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<FoodShellComponent>",
          "defaultValue": "(args: FoodShellComponent) => ({\n  props: args,\n})"
        }
      ]
    },
    "groupedFunctions": {
      "src/app/food/validators/fulfill-order-validator.ts": [
        {
          "name": "fulfillOrderValidator",
          "file": "src/app/food/validators/fulfill-order-validator.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "choiceId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "foodService",
              "type": "FoodService",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "ValidatorFn",
          "jsdoctags": [
            {
              "name": "choiceId",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "foodService",
              "type": "FoodService",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isFormControl",
          "file": "src/app/food/validators/fulfill-order-validator.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "formValue",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "number",
          "jsdoctags": [
            {
              "name": "formValue",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "src/app/food/food-choice-form/food-choice-form.type-guard.ts": [
        {
          "name": "isFormValueQuantity",
          "file": "src/app/food/food-choice-form/food-choice-form.type-guard.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "formGroup",
              "type": "FormGroup",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "FormValueQuantity",
          "jsdoctags": [
            {
              "name": "formGroup",
              "type": "FormGroup",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "src/app/food/food-choice/food-choice.type-guard.ts": [
        {
          "name": "isQtyMapCurrentValueObjectLiteral",
          "file": "src/app/food/food-choice/food-choice.type-guard.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "qtyMap",
              "type": "SimpleChange",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "SimpleChangeQuantityMap",
          "jsdoctags": [
            {
              "name": "qtyMap",
              "type": "SimpleChange",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "src/app/food/enums/menu-option.enum.ts": [
        {
          "name": "MenuOptions",
          "childs": [
            {
              "name": "all",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "all"
            },
            {
              "name": "available",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "available"
            },
            {
              "name": "soldOut",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "soldOut"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "src/app/food/enums/menu-option.enum.ts"
        }
      ]
    },
    "groupedTypeAliases": {}
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "className": "AppModule",
    "children": [
      {
        "name": "routes",
        "filename": "src/app/app-routing.module.ts",
        "module": "AppRoutingModule",
        "children": [
          {
            "path": "food",
            "loadChildren": "./food/food.module#FoodModule"
          },
          {
            "path": "",
            "redirectTo": "food",
            "pathMatch": "full"
          }
        ],
        "kind": "module"
      },
      {
        "name": "routes",
        "filename": "src/app/food/food-routing.module.ts",
        "module": "FoodRoutingModule",
        "children": [
          {
            "path": "",
            "component": "FoodShellComponent"
          }
        ],
        "kind": "module"
      }
    ]
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongDescription",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-card/food-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodChoiceFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisableSubmit",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/food-choice-form.type-guard.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "isFormValueQuantity",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice-form/interfaces/form-value-quantity.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FormValueQuantity",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodChoiceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/19",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LowSupply",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "qtyMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldOut",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/food-choice.type-guard.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "isQtyMapCurrentValueObjectLiteral",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-choice/interfaces/simple-change.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SimpleChangeQuantityMap",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodMenuCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FoodMenuCardTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "qtyMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-card/food-menu-card.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldOut",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-options/food-menu-options.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodMenuOptionsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-options/food-menu-options.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FoodMenuOptionsTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu-options/food-menu-options.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Empty",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Menu",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldOutMenu",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-menu/food-menu.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodQuestionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongQuestion",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleQuestion",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-question/food-question.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-shell/food-shell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodShellComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-shell/food-shell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-shell/food-shell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FoodTotalComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NoOrder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/food-total/food-total.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/food-service.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "FoodServiceInterface",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Choice",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Menu",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/menu.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MenuItem",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/ordered-choice.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "OrderedFoodChoice",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/price-quantity.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "PriceQuantity",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/tip.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Tip",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/food/interfaces/total.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "TotalCost",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/food/services/food.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "FoodService",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LowSupplyMockData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MockData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/constants.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SoldOutMockData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/storybook-mock/mock.ts",
        "type": "class",
        "linktype": "classe",
        "name": "MockFoodService",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/food/validators/fulfill-order-validator.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "fulfillOrderValidator",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/food/validators/fulfill-order-validator.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "isFormControl",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CORS_HEADERS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "data",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/menu.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "handler",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/tips.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CORS_HEADERS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/assets/functions/tips.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "handler",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
